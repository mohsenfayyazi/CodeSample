using Asr.Base;
using Asr.Text;
using Equipment.Codes.Security;
using Equipment.Models;
using Equipment.Models.CoustomModel;
using Kendo.Mvc.Extensions;
using Kendo.Mvc.UI;
using System;
using System.Linq;
using System.Web.Mvc;

namespace Equipment.Controllers.Exploitation.STATICINFO
{

    [Authorize]
    [Developer("H.Hamidi")]
    public partial class Static_LineController
    {

        // ***********************
        // ***** Start Action ****
        // ***********************

        //[EntityAuthorize("EXP_POST_LINE_INSTRU > select|EXP_POST_LINE > select|EXP_INSTRUMENT > select|EXP_TYPE_BAY > select|EXP_UNIT_LEVEL > select|EXP_OFF_STAT > select|EXP_PFUNCTION > select|EXP_TYPE_DOC > select")]
        public ActionResult Show_BayLine(int? id)
        {
            // مربوط به گرید است ! برای اینکه اول کار که صفحه لود میشود این ویو دیتا مقدار داشته باشد
            ViewData["EUNL_EUNL_ID"] = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            //ViewData["EPIU_ID"] = db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewData["EPOL_ID"] = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.EpiuID = id;
            ViewBag.EpiuDesc = (from b in Db.EXP_POST_LINE_INSTRU where b.EPIU_ID == id select b.CODE_NAME).FirstOrDefault().ToString();
            ViewBag.EpiuVolt = (from b in Db.EXP_CORE_BAY where b.EPIU_EPIU_ID == id select b.EUNL_EUNL_ID).FirstOrDefault().ToString();

            if (id.HasValue)
            {
                var pp = Db.EXP_POST_LINE_INSTRU.Find(id.GetValueOrDefault());
                if (pp != null)
                {
                    // 0 = اصلی
                    // 1 = تیاف 
                    // 2 = فیدر
                    if (pp.LINE_TYPE == "0")
                    {
                        ViewBag.StartPostID = pp.EPOL_EPOL_ID_INSLIN;
                        ViewBag.EndPostID = pp.EPOL_EPOL_ID_LINE;
                        ViewBag.StartPostDesc = " پست مبدا : " + (from b in Db.EXP_POST_LINE where b.EPOL_ID == pp.EPOL_EPOL_ID_INSLIN select b.EPOL_NAME).FirstOrDefault().ToString();
                        ViewBag.EndPostDesc = " پست مقصد : " + (from b in Db.EXP_POST_LINE where b.EPOL_ID == pp.EPOL_EPOL_ID_LINE select b.EPOL_NAME).FirstOrDefault().ToString();
                    }
                    else if (pp.LINE_TYPE == "1")
                    {
                        ViewBag.StartPostID = pp.EPOL_EPOL_ID_INSLIN;
                        ViewBag.EndPostID = "";
                        ViewBag.StartPostDesc = " تیاف : " + (from b in Db.EXP_POST_LINE where b.EPOL_ID == pp.EPOL_EPOL_ID_INSLIN select b.EPOL_NAME).FirstOrDefault().ToString();
                        ViewBag.EndPostDesc = "";
                    }
                    else if (pp.LINE_TYPE == "2")
                    {
                        ViewBag.StartPostID = pp.EPOL_EPOL_ID_INSLIN;
                        ViewBag.EndPostID = "";
                        ViewBag.StartPostDesc = " فیدر : " + (from b in Db.EXP_POST_LINE where b.EPOL_ID == pp.EPOL_EPOL_ID_INSLIN select b.EPOL_NAME).FirstOrDefault().ToString();
                        ViewBag.EndPostDesc = "";
                    }
                }
            }

            return View();
        }

        [EntityAuthorize("EXP_CORE_BAY > select|EXP_INSTRU_BAY > select")]
        [AcceptVerbs(HttpVerbs.Post)]
        public ActionResult ReadBayInstru([DataSourceRequest] DataSourceRequest request, string id, int? epol)
        {
            decimal inputId = Convert.ToDecimal(id);

            var query = from p in Db.EXP_CORE_BAY
                        join k in Db.EXP_INSTRU_BAY on p.ECBA_ID equals k.ECBA_ECBA_ID
                        join s in Db.EXP_POST_LINE_INSTRU on k.EPIU_EPIU_ID equals s.EPIU_ID
                        where (p.EPIU_EPIU_ID == inputId && p.EPOL_EPOL_ID == epol)
                        select new
                        {
                            k.EINB_ID,
                            InstruName = s.CODE_NAME,
                            EcbaType = p.ECBA_TYPE,
                            Active = p.ACTI_NACT,
                            VoltID = p.EUNL_EUNL_ID,
                            EpolID = p.EPOL_EPOL_ID
                        };

            return Json(query.ToList().ToDataSourceResult(request), JsonRequestBehavior.AllowGet);
        }

        [EntityAuthorize("EXP_POST_LINE_INSTRU > select|EXP_CORE_BAY > select|EXP_INSTRU_BAY > select|EXP_POST_LINE > select")]
        //public ActionResult ReadBayMultiSelect_LOV(string EpiuID, string StartPostID, string EndPostID)
        public ActionResult ReadBayMultiSelect_LOV(string EpiuID, string PostId)
        {
            decimal? lineId = Convert.ToDecimal(EpiuID);
            int? post = Convert.ToInt32(PostId);
            int?[] array = new int?[] { 1, 2, 3, 4, 281 };

            // var instru = (from J in db.EXP_POST_LINE_INSTRU where J.EPOL_EPOL_ID == lineId && J.EPOL_EPOL_ID_INSLIN != null && J.EPOL_EPOL_ID_LINE != null select J.EPIU_ID).FirstOrDefault();
            var query1 = (from b in Db.EXP_CORE_BAY
                          join c in Db.EXP_INSTRU_BAY on b.ECBA_ID equals c.ECBA_ECBA_ID
                          where b.EPIU_EPIU_ID == lineId && b.ETBY_ETBY_ID == 4 && b.ERHI_ERHI_ID == null
                          select c.EPIU_EPIU_ID);

            var RetVal = from b in Db.EXP_POST_LINE_INSTRU //.AsEnumerable()
                         join p in Db.EXP_POST_LINE //.AsEnumerable() 
                         on b.EPOL_EPOL_ID equals p.EPOL_ID
                         where (b.EPOL_EPOL_ID == post) && !query1.Contains(b.EPIU_ID) && !array.Contains(b.EINS_EINS_ID)
                         orderby b.EPIU_ID
                         select new
                         {
                             b.EPIU_ID,
                             b.CODE_NAME
                         };

            return Json(RetVal, JsonRequestBehavior.AllowGet);
        }

        [EntityAuthorize("EXP_POST_LINE_INSTRU > select|EXP_CORE_BAY > select|EXP_INSTRU_BAY > select|EXP_POST_LINE > select")]
        [AcceptVerbs(HttpVerbs.Post)]
        //public ActionResult ReadBayGrid_LOV([DataSourceRequest] DataSourceRequest request, string filterInput, string EpiuID, string StartPostID, string EndPostID)
        public ActionResult ReadBayGrid_LOV([DataSourceRequest] DataSourceRequest request, string filterInput, string EpiuID, string PostId)
        {
            bool filterDisable = string.IsNullOrEmpty(filterInput);
            string filter = string.IsNullOrEmpty(filterInput.ToUpper()) ? "" : filterInput.ToUpper().ToArabicUtf8();
            decimal? lineId = Convert.ToDecimal(EpiuID);
            int? post = Convert.ToInt32(PostId);
            int?[] array = new int?[] { 1, 2, 3, 4, 281 };

            //var instru = (from J in db.EXP_POST_LINE_INSTRU where J.EPOL_EPOL_ID == lineId && J.EPOL_EPOL_ID_INSLIN != null && J.EPOL_EPOL_ID_LINE != null select J.EPIU_ID).FirstOrDefault();
            var query1 = (from b in Db.EXP_CORE_BAY
                          join c in Db.EXP_INSTRU_BAY on b.ECBA_ID equals c.ECBA_ECBA_ID
                          where b.EPIU_EPIU_ID == lineId && b.ETBY_ETBY_ID == 4 && b.ERHI_ERHI_ID == null
                          select c.EPIU_EPIU_ID);

            var RetVal = from b in Db.EXP_POST_LINE_INSTRU //.AsEnumerable()
                         join p in Db.EXP_POST_LINE //.AsEnumerable() 
                         on b.EPOL_EPOL_ID equals p.EPOL_ID
                         where (b.EPOL_EPOL_ID == post) && !query1.Contains(b.EPIU_ID) && !array.Contains(b.EINS_EINS_ID)
                               && (b.CODE_NAME.ToUpper().Contains(filter) || filterDisable)
                         orderby b.EPIU_ID
                         select new
                         {
                             b.EPIU_ID,
                             b.CODE_NAME,
                             b.PHAS_STAT,
                             b.PHAS_TYPE
                         };

            return Json(RetVal.ToList().ToDataSourceResult(request), JsonRequestBehavior.AllowGet);
        }

        [EntityAuthorize("EXP_CORE_BAY > select,insert,update|EXP_INSTRU_BAY > select,insert,update")]
        public ActionResult AddBayLine(decimal HiddenEpiuId, int? DD_Post, int DD_Volt, string DD_BayModel, string DD_ActiveState, decimal[] MS_Instru) // decimal postId, decimal VoltId, string BayModel, string BayState, decimal[] msBayInstru)
        {
            if (MS_Instru != null)
            {
                try
                {
                    int bayid = 0;
                    var instrumentBay = new EXP_INSTRU_BAY();
                    var Bay = new EXP_CORE_BAY();
                    var qBay = (from b in Db.EXP_CORE_BAY where b.EPIU_EPIU_ID == HiddenEpiuId && b.EPOL_EPOL_ID == DD_Post select b).FirstOrDefault();
                    //var k = qBay.Count();
                    // برای اینکه اگر مقادیر (نوع، ولتاژ، وضعیت) تغییر کرد مقدار انتخابی جدید روی آنها جایگزین شود
                    if (qBay != null)
                    //if (qBay.Count() > 0)
                    {
                        qBay.EUNL_EUNL_ID = DD_Volt;
                        qBay.ECBA_TYPE = DD_BayModel;
                        qBay.ACTI_NACT = DD_ActiveState;
                        Db.SaveChanges();
                        bayid = qBay.ECBA_ID;
                    }
                    else
                    {
                        Bay.ETBY_ETBY_ID = 4;
                        Bay.EPIU_EPIU_ID = HiddenEpiuId;
                        Bay.EUNL_EUNL_ID = DD_Volt;
                        Bay.ECBA_TYPE = DD_BayModel;
                        Bay.EPOL_EPOL_ID = DD_Post;
                        Bay.ACTI_NACT = DD_ActiveState;
                        Db.EXP_CORE_BAY.Add(Bay);
                        Db.SaveChanges();
                        bayid = Bay.ECBA_ID;
                    }
                    foreach (var item in MS_Instru)
                    {
                        instrumentBay.ECBA_ECBA_ID = bayid;
                        //مقدار 0 به معنی ایجاد می باشد
                        instrumentBay.EINB_TYPE = "0";
                        instrumentBay.EPIU_EPIU_ID = Convert.ToInt32(item);
                        Db.EXP_INSTRU_BAY.Add(instrumentBay);
                        Db.SaveChanges();
                    }
                    return new ServerMessages(ServerOprationType.Success) { Message = "ذخیره سازی با موفقیت انجام شد" }.ToJson();
                }
                catch (Exception ex)
                {
                    return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = ex.PersianMessage() }.ToJson();
                }
            }
            else
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = "تجهیزی جهت ثبت انتخاب نشده" }.ToJson();
            }
        }

    }

}