using Asr.Base;
using Equipment.Codes.Security;
using System.Linq;
using System.Web.Mvc;

namespace Equipment.Controllers.Exploitation.STATICINFO
{

    [Authorize]
    [Developer("H.Hamidi")]
    public partial class Static_LineController
    {

        // ***********************
        // ***** Start Action ****
        // ***********************

        [EntityAuthorize("EXP_POST_LINE_INSTRU > select|EXP_POST_LINE > select|EXP_INSTRUMENT > select|EXP_TYPE_BAY > select|EXP_UNIT_LEVEL > select|EXP_OFF_STAT > select|EXP_PFUNCTION > select|EXP_TYPE_DOC > select")]
        public ActionResult Static_Line_NoteBook(int? id)
        {
            if (id.HasValue)
            {
                var pp = Db.EXP_POST_LINE_INSTRU.Find(id.GetValueOrDefault());
                if (pp != null)
                {
                    var post_id = Db.EXP_POST_LINE.FirstOrDefault(x => x.EPOL_ID == pp.EPOL_EPOL_ID).EPOL_ID;
                    var volt_id = Db.EXP_POST_LINE.FirstOrDefault(x => x.EPOL_ID == pp.EPOL_EPOL_ID).EUNL_EUNL_ID;
                    ViewBag.postId = post_id;
                    ViewBag.instruId = pp.EPIU_ID;
                    ViewBag.voltId = volt_id;

                    // 0 = اصلی
                    // 1 = تیاف 
                    // 2 = فیدر
                    if (pp.LINE_TYPE == "0")
                    {
                        ViewBag.StartPostID = pp.EPOL_EPOL_ID_INSLIN;
                        ViewBag.EndPostID = pp.EPOL_EPOL_ID_LINE;
                        ViewBag.StartPostDesc = " پست مبدا : " + (from b in Db.EXP_POST_LINE where b.EPOL_ID == pp.EPOL_EPOL_ID_INSLIN select b.EPOL_NAME).FirstOrDefault().ToString();
                        ViewBag.EndPostDesc = " پست مقصد : " + (from b in Db.EXP_POST_LINE where b.EPOL_ID == pp.EPOL_EPOL_ID_LINE select b.EPOL_NAME).FirstOrDefault().ToString();
                    }
                    else if (pp.LINE_TYPE == "1")
                    {
                        ViewBag.StartPostID = pp.EPOL_EPOL_ID_INSLIN;
                        ViewBag.EndPostID = "";
                        ViewBag.StartPostDesc = " تیاف : " + (from b in Db.EXP_POST_LINE where b.EPOL_ID == pp.EPOL_EPOL_ID_INSLIN select b.EPOL_NAME).FirstOrDefault().ToString();
                        ViewBag.EndPostDesc = "";
                    }
                    else if (pp.LINE_TYPE == "2")
                    {
                        ViewBag.StartPostID = pp.EPOL_EPOL_ID_INSLIN;
                        ViewBag.EndPostID = "";
                        ViewBag.StartPostDesc = " فیدر : " + (from b in Db.EXP_POST_LINE where b.EPOL_ID == pp.EPOL_EPOL_ID_INSLIN select b.EPOL_NAME).FirstOrDefault().ToString();
                        ViewBag.EndPostDesc = "";
                    }
                }
            }

            ViewBag.Instrument = Db.EXP_INSTRUMENT.Where(c => c.EINS_EINS_ID != null).Select(c => new { c.EINS_ID, c.EINS_DESC });
            ViewBag.Bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.typedoc = Db.EXP_TYPE_DOC.Select(c => new { c.ETDO_ID, c.ETDO_DESC });
            return View();
        }

        public ActionResult GetPost_New()
        {
            var RetVal = (from p in Db.EXP_POST_LINE
                          where p.EPOL_TYPE == "0" //&& p.EUNL_EUNL_ID == Unitvolt && p.ORGA_CODE == ORGA
                          select new
                          {
                              p.EPOL_NAME,
                              p.EPOL_ID
                          }).OrderBy(x => x.EPOL_NAME).ToList();

            return Json(RetVal, JsonRequestBehavior.AllowGet);
        }

    }

}
