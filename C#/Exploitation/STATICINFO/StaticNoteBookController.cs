using Kendo.Mvc.UI;
using System.Linq;
using System.Web.Mvc;
using Kendo.Mvc.Extensions;
using Asr.Base;

namespace Equipment.Controllers.Exploitation.STATICINFO
{
    [Developer("H.Hamidi")]
    public class StaticNoteBookController : DbController
    {
        //
        // GET: /StaticNoteBook/

        /// <summary>
        /// type ==> post: 0 / line:1 / instrument: 2
        /// </summary>
        /// <param name="type"></param>
        /// <returns></returns>
        public ActionResult NoteBook(string type, int? id)
        {
            if (!string.IsNullOrEmpty(type) && id.HasValue)
            {
                var ValueName = string.Empty;
                if (type == "0")
                {
                    ValueName = (from b in Db.EXP_POST_LINE where b.EPOL_ID == id && b.EPOL_TYPE == "0" select b.EPOL_NAME).FirstOrDefault().ToString();
                    ViewData["DropDown_Post"] = id;
                    ViewData["DropDown_Type"] = 0;
                    ViewData["DropDown_Instrument"] = "";
                }
                else if (type == "1")
                {
                    var line = (from b in Db.EXP_POST_LINE_INSTRU where b.EPIU_ID == id select new { b.EPOL_EPOL_ID_INSLIN, b.CODE_NAME }).FirstOrDefault();
                    ValueName = line.CODE_NAME;
                    ViewData["DropDown_Post"] = line.EPOL_EPOL_ID_INSLIN; // پست مبدا
                    ViewData["DropDown_Type"] = 1;
                    ViewData["DropDown_Instrument"] = id;
                }
                else if (type == "2")
                {
                    var instrument = (from b in Db.EXP_POST_LINE_INSTRU where b.EPIU_ID == id select new { b.EPOL_EPOL_ID, b.CODE_NAME }).FirstOrDefault();
                    ValueName = instrument.CODE_NAME;
                    ViewData["DropDown_Post"] = instrument.EPOL_EPOL_ID;
                    ViewData["DropDown_Type"] = 2;
                    ViewData["DropDown_Instrument"] = id;
                }

                ViewBag.Type = type;
                ViewBag.ValueName = ValueName;
                return View();
            }
            else
            {
                ViewBag.Type = "";
                ViewBag.ValueName = "";
                ViewData["DropDown_Post"] = "";
                ViewData["DropDown_Type"] = 0;
                ViewData["DropDown_Instrument"] = "";
                return View();
            }
        }

        public ActionResult ReadDocument()
        {
            //var edocInstru = (from b in Db.EXP_EDOC_INSTRU where b.ETDO_ETDO_ID != null select b.ETDO_ETDO_ID).Distinct();            
            //var expiDoc = (from b in Db.EXP_EXPI_DOC where b.ETDO_ETDO_ID != null select b.ETDO_ETDO_ID).Distinct();
            var expiDoc = Db.Database.SqlQuery<int>("select distinct etdo_etdo_id from exp_expi_doc where etdo_etdo_id is not null");
            var edocInstru = Db.Database.SqlQuery<int>("select distinct etdo_etdo_id from exp_edoc_instru where etdo_etdo_id is not null");
            var AllDocUse = edocInstru.Union(expiDoc);
            //int[] array = { 1, 2, 21, 61, 81, 101, 144, 164 };
            var query = (from b in Db.EXP_TYPE_DOC
                         //where array.Contains(b.ETDO_ID)
                         where AllDocUse.Contains(b.ETDO_ID)
                         select new { b.ETDO_ID, b.ETDO_DESC }).ToList().OrderBy(x => x.ETDO_ID);
            return Json(query, JsonRequestBehavior.AllowGet);
        }

        public ActionResult ReadAllPost()
        {
            var query = (from b in Db.EXP_POST_LINE
                         where b.EPOL_TYPE == "0"
                         orderby b.EUNL_EUNL_ID, b.EPOL_NAME
                         select new { b.EPOL_ID, b.EPOL_NAME, b.EUNL_EUNL_ID }).ToList();
            return Json(query, JsonRequestBehavior.AllowGet);
        }

        public ActionResult ReadAllPostInstrument(int? id, string type)
        {
            if (type == "1")
            {
                var query = (from b in Db.EXP_POST_LINE_INSTRU
                             where b.EPOL_EPOL_ID_LINE == id || b.EPOL_EPOL_ID_INSLIN == id
                             orderby b.EINS_EINS_ID, b.CODE_NAME
                             select new { b.EPIU_ID, b.CODE_NAME, b.EINS_EINS_ID }).ToList();
                return Json(query, JsonRequestBehavior.AllowGet);
            }
            else if (type == "2")
            {
                var query = (from b in Db.EXP_POST_LINE_INSTRU
                             where b.EPOL_EPOL_ID == id
                             orderby b.EINS_EINS_ID, b.CODE_NAME
                             select new { b.EPIU_ID, b.CODE_NAME, b.EINS_EINS_ID }).ToList();
                return Json(query, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return null;
            }
        }

        public ActionResult ReadNoteBookGrid([DataSourceRequest] DataSourceRequest request, int? postId, /*int? typeId,*/ int? instrumentId, int? documentTypeId, string startDate, string endDate)
        {
            using (var conn = WebMatrix.Data.Database.OpenConnectionString(Models.BandarEntities.EntityConnectionString2(GlobalConst.UserInfo()), "Oracle.ManagedDataAccess.Client"))
            {
                var query = conn.Query(@"SELECT EEDO_ID, ETDO_ETDO_ID, DOC_NUMB, EEDO_YEAR, EFUN_EFUN_ID, EPOL_EPOL_ID, EPIU_EPIU_ID, INSTRU_NAME,
                                                DESCRIPTION, START_DATE, START_TIME, END_DATE, END_TIME, EPOL_NAME, EFUN_DESC, EPRO_DESC, ETDO_DESC
                                         FROM EXP_DOCUMENT_V
                                         WHERE (ETDO_ETDO_ID = :documentTypeId OR :documentTypeId IS NULL)
                                         AND (EPOL_EPOL_ID = :postId OR :postId IS NULL)
                                         AND (EPIU_EPIU_ID = :instrumentId OR :instrumentId IS NULL)                                         
                                         AND (((LPAD(NVL(START_DATE,'0000/00/00'),10,'0') BETWEEN NVL(:startDate,'0000/00/00') AND NVL(:endDate,'9999/99/99')))
                                                AND
                                              ((LPAD(NVL(END_DATE,'9999/99/99'),10,'0') BETWEEN NVL(:startDate,'0000/00/00') AND NVL(:endDate,'9999/99/99'))))"
                                              , documentTypeId, documentTypeId, postId, postId, instrumentId, instrumentId,
                                                startDate, endDate, startDate, endDate)
                             .Select(b => new
                             {
                                 b.EEDO_ID,
                                 b.ETDO_ETDO_ID,
                                 b.DOC_NUMB,
                                 b.EEDO_YEAR,
                                 b.EFUN_EFUN_ID,
                                 b.EPOL_EPOL_ID,
                                 b.EPIU_EPIU_ID,
                                 b.INSTRU_NAME,
                                 b.DESCRIPTION,
                                 b.START_DATE,
                                 b.START_TIME,
                                 b.END_DATE,
                                 b.END_TIME,
                                 b.EPOL_NAME,
                                 b.EFUN_DESC,
                                 b.EPRO_DESC,
                                 b.ETDO_DESC,
                                 PROG_FUNC = string.IsNullOrEmpty(b.EPRO_DESC) ? "---" : (b.EPRO_DESC + " / " + b.ETDO_DESC)
                             }).OrderBy(b => b.ETDO_ETDO_ID).ToList();

                var jsonResult = Json(query.ToDataSourceResult(request), JsonRequestBehavior.AllowGet);
                jsonResult.MaxJsonLength = int.MaxValue;
                return jsonResult;
            }
        }

    }

}
 