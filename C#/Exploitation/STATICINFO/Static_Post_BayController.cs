using Asr.Text;
using Equipment.Codes.Security;
using Equipment.Models;
using Equipment.Models.CoustomModel;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;

namespace Equipment.Controllers.Exploitation.STATICINFO
{

    public partial class Static_Post_ListController : DbController
    {

        //[EntityAuthorize("EXP_INSTRU_BAY > delete | EXP_CORE_BAY > delete")]
        public ActionResult RemoveMasterAfterDetails(string id)
        {
            Db.Database.ExecuteSqlCommand("DELETE FROM EXP_INSTRU_BAY WHERE  ECBA_ECBA_ID = {0}".FormatWith(id));
            Db.Database.ExecuteSqlCommand("DELETE FROM EXP_CORE_BAY WHERE ECBA_ID = {0}".FormatWith(id));
            return Json(new { Success = true }, JsonRequestBehavior.AllowGet);
        }

        [EntityAuthorize("EXP_TYPE_BAY > select |EXP_UNIT_LEVEL > select")]
        public ActionResult Static_Post_Bay()
        {
            ViewData["TypeBay"] = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            ViewData["UnitLevel"] = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            return View();
        }
        
        //[EntityAuthorize("EXP_CORE_BAY > select")]
        //private static IEnumerable<EXP_CORE_BAY> Get_Bay()
        public IEnumerable<EXP_CORE_BAY> Get_Bay()
        {
            var query = (from c in Db.EXP_CORE_BAY select c).ToList();
            return query;
        }

        // [EntityAuthorize("EXP_CORE_BAY > select,insert")]
        public ActionResult AddBay(EXP_CORE_BAY model)
        {
            try
            {
                Db.EXP_CORE_BAY.Add(model);
                Db.SaveChanges();
                // model.SaveToDataBase();
                return new ServerMessages(ServerOprationType.Success) { Message = string.Format("ثبت شد.") }.ToJson();
            }
            catch (Exception ex)
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = ex.PersianMessage() }.ToJson();
            }
        }

    }

}
