using Asr.Base;
using Asr.Text;
using Equipment.Codes.Security;
using Equipment.Models;
using Equipment.Models.CoustomModel;
using Kendo.Mvc.Extensions;
using Kendo.Mvc.UI;
using System;
using System.Linq;
using System.Web.Mvc;

namespace Equipment.Controllers.Exploitation.STATICINFO
{

    [Authorize]
    [Developer("H.Hamidi")]
    public partial class Static_Post_ListController
    {
        // ***********************
        // ***** Start Action ****
        // ***********************

        public ActionResult ShowRele(int? id, int postId)
        {
            ViewData["PostInstrument"] = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.idback = id;
            ViewBag.postId = postId;
            return View();
        }

        [EntityAuthorize("EXP_FRELAH_INST > select")]
        [AcceptVerbs(HttpVerbs.Post)]
        public ActionResult ReadReleData([DataSourceRequest] DataSourceRequest request, int? releId)
        {
            string q = "";
            if (releId != null)
            {
                q = (from b in Db.EXP_POST_LINE_INSTRU where b.EPIU_ID == releId select b.CODE_NAME).FirstOrDefault().ToString();
            }

            var query = (from b in Db.EXP_FRELAH_INST
                         join c in Db.EXP_POST_LINE_INSTRU on b.EPIU_EPIU_ID equals c.EPIU_ID
                         where b.EPIU_EPIU_ID_R == releId
                         select new
                         {
                             b.EFRI_ROW,
                             b.EPIU_EPIU_ID,
                             inst = c.CODE_NAME,
                             instMain = q,
                             b.EPIU_EPIU_ID_R
                         }).ToList();

            return Json(query.ToDataSourceResult(request), JsonRequestBehavior.AllowGet);
        }

        [EntityAuthorize("EXP_POST_LINE_INSTRU > select|EXP_POST_LINE > select")]
        public ActionResult ReadLOV_MultiSelect(int? id)
        {
            //string[] array = { "1", "2", "3", "4", "281" };
            int?[] array = new int?[] { 1, 2, 3, 4, 281 };
            var RetVal = from b in Db.EXP_POST_LINE_INSTRU//.AsEnumerable()
                         join p in Db.EXP_POST_LINE//.AsEnumerable() 
                         on b.EPOL_EPOL_ID equals p.EPOL_ID
                         where (b.EPOL_EPOL_ID == id || b.EPOL_EPOL_ID_INSLIN == id || b.EPOL_EPOL_ID_LINE == id)  //&& !array.Contains(b.EINS_EINS_ID)
                         select new
                         {
                             b.EPIU_ID,
                             b.CODE_NAME
                             //types = b.CODE_NAME// + " " + backtypephaz(b.PHAS_STAT)
                         };

            return Json(RetVal, JsonRequestBehavior.AllowGet);
        }

        [EntityAuthorize("EXP_POST_LINE_INSTRU > select|EXP_POST_LINE > select|EXP_FRELAH_INST > select")]
        [AcceptVerbs(HttpVerbs.Post)]
        public ActionResult ReadLOV_Grid([DataSourceRequest] DataSourceRequest request, string filterInput, int? releId, int? id)
        {
            var q = (from b in Db.EXP_FRELAH_INST where b.EPIU_EPIU_ID_R == releId select b.EPIU_EPIU_ID);
            bool filterDisable = string.IsNullOrEmpty(filterInput);
            string filter = string.IsNullOrEmpty(filterInput.ToUpper()) ? "" : filterInput.ToUpper().ToArabicUtf8();
            //string[] array = { "1", "2", "3", "4", "281" };
            int?[] array = new int?[] { 1, 2, 3, 4, 281 };

            var RetVal = from b in Db.EXP_POST_LINE_INSTRU//.AsEnumerable()
                         join p in Db.EXP_POST_LINE//.AsEnumerable() 
                         on b.EPOL_EPOL_ID equals p.EPOL_ID
                         where (b.EPOL_EPOL_ID == id || b.EPOL_EPOL_ID_INSLIN == id || b.EPOL_EPOL_ID_LINE == id) //&& !array.Contains(b.EINS_EINS_ID) && 
                         && (b.CODE_NAME.ToUpper().Contains(filter) || filterDisable) && !q.Contains(b.EPIU_ID)
                         //!array.Contains(b.EINS_EINS_ID.ToString()) && 
                         select new
                         {
                             b.EPIU_ID,
                             b.CODE_NAME
                         };

            return Json(RetVal.ToList().ToDataSourceResult(request), JsonRequestBehavior.AllowGet);
        }

        [EntityAuthorize("EXP_FRELAH_INST > select,insert,update")]
        public ActionResult AddRele(decimal idInstru, decimal[] msRele)
        {
            try
            {
                foreach (decimal item in msRele)
                {
                    Db.EXP_FRELAH_INST.Add(new EXP_FRELAH_INST
                    {
                        EPIU_EPIU_ID = item,
                        EPIU_EPIU_ID_R = idInstru
                    });
                }

                Db.SaveChanges();
                return new ServerMessages(ServerOprationType.Success) { Message = "اطلاعات با موفقیت ثبت شد ..." }.ToJson();
            }
            catch (Exception ex)
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = ex.PersianMessage() }.ToJson();
            }
        }

    }

}
