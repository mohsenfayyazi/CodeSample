using System.Linq;
using System.Web.Mvc;

namespace Equipment.Controllers.Exploitation.STATICINFO
{
    public partial class Static_Post_ListController
    {

        public ActionResult NoteBook_Post(int? id)
        {
            if (id.HasValue)
            {
                var pp = Db.EXP_POST_LINE.Find(id.GetValueOrDefault());
                if (pp != null)
                {
                    if (!string.IsNullOrEmpty(pp.ORGA_CODE))
                    {
                        ViewData["DD_Area"] = pp.ORGA_CODE;
                        ViewData["DD_Volt"] = pp.EUNL_EUNL_ID;
                        ViewData["DD_Post"] = pp.EPOL_ID;
                        //ViewData["orgaEditable"] = false;
                        ViewData["organEditable"] = false;
                        ViewData["voltageEditable"] = false;
                        ViewData["postEditable"] = false;
                    }
                }
            }

            ViewBag.Instrument = Db.EXP_INSTRUMENT.Where(c => c.EINS_EINS_ID != null).Select(c => new { c.EINS_ID, c.EINS_DESC });
            ViewBag.Bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.typedoc = Db.EXP_TYPE_DOC.Select(c => new { c.ETDO_ID, c.ETDO_DESC });
            return View();
        }

        public ActionResult Static_Post_NoteBook2(int? id)
        {
            ViewData["post_line"] = Db.EXP_POST_LINE.Select(o => new { o.EPOL_ID, o.EPOL_NAME }).AsEnumerable();
            ViewData["project"] = Db.CGT_PRO.Where(o => o.CPRO_PRJ_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_PRJ_CODE).FirstOrDefault())
                                            .Where(o => o.CPLA_PLN_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_CPLA_PLN_CODE).FirstOrDefault())
                                            .Select(o => new { o.PRJ_CODE, o.PRJ_DESC })
                                            .AsEnumerable();
            ViewData["Organ"] = Db.PAY_ORGAN.Select(o => new { o.CODE, o.ORGA_DESC }).AsEnumerable();
            ViewData["Type_Doc"] = Db.EXP_EXPI_DOC.Select(o => new { o.EEDO_ID, o.EXP_TYPE_DOC, o.ETDO_ETDO_ID, o.EXP_TYPE_DOC.ETDO_DESC }).Where(o => o.ETDO_ETDO_ID == o.EXP_TYPE_DOC.ETDO_ID).AsEnumerable();
            ViewData["Doc_val"] = Db.EXP_EITEM_DOC_VALUE.Select(o => new { o.EIDR_ID, o.EIDR_VALUE });
            ViewData["post_instr"] = Db.EXP_POST_LINE_INSTRU.Select(o => new { o.EINS_EINS_ID, o.CODE_DISP });
            ViewData["JDTYid"] = Db.SEC_JOB_TYPE_DOC.Select(o => new { o.JDTY_ID, o.ACTIV_FNAM });

            if (id.HasValue)
            {
                var pp = Db.EXP_POST_LINE.Find(id.GetValueOrDefault());
                if (pp != null)
                {
                    if (!string.IsNullOrEmpty(pp.ORGA_CODE))
                    {
                        var organ_desc = Db.PAY_ORGAN.FirstOrDefault(x => x.CODE == pp.ORGA_CODE).ORGN_DESC;
                        var volt_desc = Db.EXP_UNIT_LEVEL.FirstOrDefault(x => x.EUNL_ID == pp.EUNL_EUNL_ID).EUNL_DESC;
                        var post_id = pp.EPOL_ID;
                        var post_desc = pp.EPOL_NAME;
                        ViewData["ORGA_CODE1"] = pp.ORGA_CODE;
                        ViewData["Unitvolt"] = pp.EUNL_EUNL_ID;
                        ViewData["EPOL_EPOL_ID"] = pp.EPOL_ID;
                        ViewData["organEditable"] = false;
                        ViewData["voltageEditable"] = false;
                        ViewData["postEditable"] = false;
                        ViewBag.organDesc = organ_desc;
                        ViewBag.voltDesc = volt_desc;
                        ViewBag.postidvalue = post_id;
                        ViewBag.postDesc = post_desc;
                    }
                }
            }

            ViewBag.Instrument = Db.EXP_INSTRUMENT.Where(c => c.EINS_EINS_ID != null).Select(c => new { c.EINS_ID, c.EINS_DESC });
            ViewBag.Bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.typedoc = Db.EXP_TYPE_DOC.Select(c => new { c.ETDO_ID, c.ETDO_DESC });

            if (id != 0)
            {
                ViewBag.check = 0;
                ViewBag.postid = id;
                ViewBag.postinstid = 0;
                ViewBag.postline = 0;
            }
            else
            {
                ViewBag.check = 1;
            }
            return View();

        }

    }

}