using Equipment.Models;
using Kendo.Mvc.UI;
using System;
using System.Linq;
using System.Web.Mvc;

namespace Equipment.Controllers.Exploitation.STATICINFO
{
    public partial class Static_Post_ListController
    {
        //
        // GET: /Static_Post_NoteBook/        
        public ActionResult Static_Post_NoteBook()
        {
            ViewData["post_line"] = Db.EXP_POST_LINE.Select(o => new { o.EPOL_ID, o.EPOL_NAME }).AsEnumerable();
            ViewData["project"] = Db.CGT_PRO.Where(o => o.CPRO_PRJ_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_PRJ_CODE).FirstOrDefault())
                                            .Where(o => o.CPLA_PLN_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_CPLA_PLN_CODE).FirstOrDefault())
                                            .Select(o => new { o.PRJ_CODE, o.PRJ_DESC })
                                            .AsEnumerable();
            ViewData["Organ"] = Db.PAY_ORGAN.Select(o => new { o.CODE, o.ORGA_DESC }).AsEnumerable();
            ViewData["Type_Doc"] = Db.EXP_EXPI_DOC.Select(o => new { o.EEDO_ID, o.EXP_TYPE_DOC, o.ETDO_ETDO_ID, o.EXP_TYPE_DOC.ETDO_DESC }).Where(o => o.ETDO_ETDO_ID == o.EXP_TYPE_DOC.ETDO_ID).AsEnumerable();
            ViewData["Doc_val"] = Db.EXP_EITEM_DOC_VALUE.Select(o => new { o.EIDR_ID, o.EIDR_VALUE });
            ViewData["post_instr"] = Db.EXP_POST_LINE_INSTRU.Select(o => new { o.EINS_EINS_ID, o.CODE_DISP });
            ViewData["JDTYid"] = Db.SEC_JOB_TYPE_DOC.Select(o => new { o.JDTY_ID, o.ACTIV_FNAM });
            ViewBag.Instrument = Db.EXP_INSTRUMENT.Where(c => c.EINS_EINS_ID != null).Select(c => new { c.EINS_ID, c.EINS_DESC });
            ViewBag.Bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.typedoc = Db.EXP_TYPE_DOC.Select(c => new { c.ETDO_ID, c.ETDO_DESC });
            ViewBag.check = 1;
            ViewBag.postid = 0;
            ViewBag.postinstid = 0;
            ViewBag.postline = 0;
            return View();
        }

        public ActionResult Static_Post_NoteBookform(int? id)
        {
            ViewData["post_line"] = Db.EXP_POST_LINE.Select(o => new { o.EPOL_ID, o.EPOL_NAME }).AsEnumerable();
            ViewData["project"] = Db.CGT_PRO.Where(o => o.CPRO_PRJ_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_PRJ_CODE).FirstOrDefault())
                                            .Where(o => o.CPLA_PLN_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_CPLA_PLN_CODE).FirstOrDefault())
                                            .Select(o => new { o.PRJ_CODE, o.PRJ_DESC })
                                            .AsEnumerable();
            ViewData["Organ"] = Db.PAY_ORGAN.Select(o => new { o.CODE, o.ORGA_DESC }).AsEnumerable();
            ViewData["Type_Doc"] = Db.EXP_EXPI_DOC.Select(o => new { o.EEDO_ID, o.EXP_TYPE_DOC, o.ETDO_ETDO_ID, o.EXP_TYPE_DOC.ETDO_DESC }).Where(o => o.ETDO_ETDO_ID == o.EXP_TYPE_DOC.ETDO_ID).AsEnumerable();
            ViewData["Doc_val"] = Db.EXP_EITEM_DOC_VALUE.Select(o => new { o.EIDR_ID, o.EIDR_VALUE });
            ViewData["post_instr"] = Db.EXP_POST_LINE_INSTRU.Select(o => new { o.EINS_EINS_ID, o.CODE_DISP });
            ViewData["JDTYid"] = Db.SEC_JOB_TYPE_DOC.Select(o => new { o.JDTY_ID, o.ACTIV_FNAM });

            if (id.HasValue)
            {
                var pp = Db.EXP_POST_LINE.Find(id.GetValueOrDefault());
                if (pp != null)
                {
                    if (!string.IsNullOrEmpty(pp.ORGA_CODE))
                    {
                        var organ_desc = Db.PAY_ORGAN.FirstOrDefault(x => x.CODE == pp.ORGA_CODE).ORGN_DESC;
                        var volt_desc = Db.EXP_UNIT_LEVEL.FirstOrDefault(x => x.EUNL_ID == pp.EUNL_EUNL_ID).EUNL_DESC;
                        var post_id = pp.EPOL_ID;
                        var post_desc = pp.EPOL_NAME;
                        ViewData["ORGA_CODE1"] = pp.ORGA_CODE;
                        ViewData["Unitvolt"] = pp.EUNL_EUNL_ID;
                        ViewData["EPOL_EPOL_ID"] = pp.EPOL_ID;
                        ViewData["organEditable"] = false;
                        ViewData["voltageEditable"] = false;
                        ViewData["postEditable"] = false;
                        ViewBag.organDesc = organ_desc;
                        ViewBag.voltDesc = volt_desc;
                        ViewBag.postidvalue = post_id;
                        ViewBag.postDesc = post_desc;
                    }
                }
            }

            ViewBag.Instrument = Db.EXP_INSTRUMENT.Where(c => c.EINS_EINS_ID != null).Select(c => new { c.EINS_ID, c.EINS_DESC });
            ViewBag.Bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.typedoc = Db.EXP_TYPE_DOC.Select(c => new { c.ETDO_ID, c.ETDO_DESC });
            if (id != 0)
            {
                ViewBag.check = 0;
                ViewBag.postid = id;
                ViewBag.postinstid = 0;
                ViewBag.postline = 0;
            }
            else
            {
                ViewBag.check = 1;
            }

            return View("Static_Post_NoteBook");
        }

        public ActionResult Static_Post_NoteBookinst(int? id)
        {
            ViewData["post_line"] = Db.EXP_POST_LINE.Select(o => new { o.EPOL_ID, o.EPOL_NAME }).AsEnumerable();
            ViewData["project"] = Db.CGT_PRO.Where(o => o.CPRO_PRJ_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_PRJ_CODE).FirstOrDefault())
                                            .Where(o => o.CPLA_PLN_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_CPLA_PLN_CODE).FirstOrDefault())
                                            .Select(o => new { o.PRJ_CODE, o.PRJ_DESC })
                                            .AsEnumerable();
            ViewData["Organ"] = Db.PAY_ORGAN.Select(o => new { o.CODE, o.ORGA_DESC }).AsEnumerable();
            ViewData["Type_Doc"] = Db.EXP_EXPI_DOC.Select(o => new { o.EEDO_ID, o.EXP_TYPE_DOC, o.ETDO_ETDO_ID, o.EXP_TYPE_DOC.ETDO_DESC }).Where(o => o.ETDO_ETDO_ID == o.EXP_TYPE_DOC.ETDO_ID).AsEnumerable();
            ViewData["Doc_val"] = Db.EXP_EITEM_DOC_VALUE.Select(o => new { o.EIDR_ID, o.EIDR_VALUE });
            ViewData["post_instr"] = Db.EXP_POST_LINE_INSTRU.Select(o => new { o.EINS_EINS_ID, o.CODE_DISP });
            ViewData["JDTYid"] = Db.SEC_JOB_TYPE_DOC.Select(o => new { o.JDTY_ID, o.ACTIV_FNAM });

            if (id.HasValue)
            {
                var pp = Db.EXP_POST_LINE_INSTRU.Find(id.GetValueOrDefault());
                if (pp != null)
                {
                    var organ_code = Db.EXP_POST_LINE.FirstOrDefault(x => x.EPOL_ID == pp.EPOL_EPOL_ID).ORGA_CODE;
                    var organ_desc = Db.PAY_ORGAN.FirstOrDefault(x => x.CODE == organ_code).ORGN_DESC;
                    var volt_id = Db.EXP_POST_LINE.FirstOrDefault(x => x.EPOL_ID == pp.EPOL_EPOL_ID).EUNL_EUNL_ID;
                    var volt_desc = Db.EXP_UNIT_LEVEL.FirstOrDefault(x => x.EUNL_ID == volt_id).EUNL_DESC;
                    var post_id = Db.EXP_POST_LINE.FirstOrDefault(x => x.EPOL_ID == pp.EPOL_EPOL_ID).EPOL_ID;
                    var post_desc = Db.EXP_POST_LINE.FirstOrDefault(x => x.EPOL_ID == pp.EPOL_EPOL_ID).EPOL_NAME;
                    var instru_einsid = pp.EINS_EINS_ID;
                    var instru_desc = pp.CODE_NAME;
                    var defaultClass = (from b in Db.EXP_INSTRUMENT
                                        orderby b.EINS_DESC
                                        where b.SELT_TYPE == "0" && b.EINS_ID == instru_einsid
                                        orderby b.EINS_ID
                                        select new { b.EINS_ID, b.EINS_DESC }).FirstOrDefault();

                    ViewData["ORGA_CODE1"] = organ_code;
                    ViewData["Unitvolt"] = volt_id;
                    ViewData["EPOL_EPOL_ID"] = pp.EPOL_EPOL_ID;
                    ViewData["POSTINST"] = instru_einsid;
                    ViewData["EINSC"] = defaultClass.EINS_ID;
                    ViewData["organEditable"] = false;
                    ViewData["voltageEditable"] = false;
                    ViewData["postEditable"] = false;
                    ViewData["instruEditable"] = false;
                    ViewBag.organDesc = organ_desc;
                    ViewBag.voltDesc = volt_desc;
                    ViewBag.postidvalue = post_id;
                    ViewBag.postDesc = post_desc;
                    ViewBag.instruidvalue = instru_einsid;
                    ViewBag.instruDesc = instru_desc;
                    ViewBag.classId = defaultClass.EINS_ID;
                    ViewBag.classDesc = defaultClass.EINS_DESC;
                }
            }

            ViewBag.Instrument = Db.EXP_INSTRUMENT.Where(c => c.EINS_EINS_ID != null).Select(c => new { c.EINS_ID, c.EINS_DESC });
            ViewBag.Bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.typedoc = Db.EXP_TYPE_DOC.Select(c => new { c.ETDO_ID, c.ETDO_DESC });
            if (id != 0)
            {
                ViewBag.check = 0;
                ViewBag.postid = 0;
                ViewBag.postinstid = id;
                ViewBag.postline = 0;
            }
            else
            {
                ViewBag.check = 1;
            }

            return View("Static_Post_NoteBook");
        }

        public ActionResult Static_Post_NoteBookline(int? id)
        {
            ViewData["post_line"] = Db.EXP_POST_LINE.Select(o => new { o.EPOL_ID, o.EPOL_NAME }).AsEnumerable();
            ViewData["project"] = Db.CGT_PRO.Where(o => o.CPRO_PRJ_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_PRJ_CODE).FirstOrDefault())
                                            .Where(o => o.CPLA_PLN_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_CPLA_PLN_CODE).FirstOrDefault())
                                            .Select(o => new { o.PRJ_CODE, o.PRJ_DESC })
                                            .AsEnumerable();
            ViewData["Organ"] = Db.PAY_ORGAN.Select(o => new { o.CODE, o.ORGA_DESC }).AsEnumerable();
            ViewData["Type_Doc"] = Db.EXP_EXPI_DOC.Select(o => new { o.EEDO_ID, o.EXP_TYPE_DOC, o.ETDO_ETDO_ID, o.EXP_TYPE_DOC.ETDO_DESC }).Where(o => o.ETDO_ETDO_ID == o.EXP_TYPE_DOC.ETDO_ID).AsEnumerable();
            ViewData["Doc_val"] = Db.EXP_EITEM_DOC_VALUE.Select(o => new { o.EIDR_ID, o.EIDR_VALUE });
            ViewData["post_instr"] = Db.EXP_POST_LINE_INSTRU.Select(o => new { o.EINS_EINS_ID, o.CODE_DISP });
            ViewData["JDTYid"] = Db.SEC_JOB_TYPE_DOC.Select(o => new { o.JDTY_ID, o.ACTIV_FNAM });

            if (id.HasValue)
            {
                var pp = Db.EXP_POST_LINE_INSTRU.Find(id.GetValueOrDefault());
                if (pp != null)
                {
                    var organ_code = Db.EXP_POST_LINE.FirstOrDefault(x => x.EPOL_ID == pp.EPOL_EPOL_ID).ORGA_CODE;
                    var organ_desc = Db.PAY_ORGAN.FirstOrDefault(x => x.CODE == organ_code && x.MANA_ASTA_CODE == "7" && x.MANA_CODE == "6").ORGA_DESC;
                    var volt_id = Db.EXP_POST_LINE.FirstOrDefault(x => x.EPOL_ID == pp.EPOL_EPOL_ID_LINE).EUNL_EUNL_ID;
                    var volt_desc = Db.EXP_UNIT_LEVEL.FirstOrDefault(x => x.EUNL_ID == volt_id).EUNL_DESC;
                    // for line
                    var post_desc = Db.EXP_POST_LINE.FirstOrDefault(x => x.EPOL_ID == pp.EPOL_EPOL_ID).EPOL_NAME;
                    ViewData["ORGA_CODE1"] = organ_desc;
                    ViewData["Unitvolt"] = volt_id;
                    ViewData["EPOL_EPOL_ID"] = pp.EPOL_EPOL_ID;
                    ViewData["organEditable"] = false;
                    ViewData["voltageEditable"] = false;
                    ViewData["postEditable"] = false;
                    ViewData["classEditable"] = false;
                    ViewBag.organDesc = organ_desc;
                    ViewBag.voltDesc = volt_desc;
                    ViewBag.postDesc = post_desc;
                }
            }

            ViewBag.Instrument = Db.EXP_INSTRUMENT.Where(c => c.EINS_EINS_ID != null).Select(c => new { c.EINS_ID, c.EINS_DESC });
            ViewBag.Bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.typedoc = Db.EXP_TYPE_DOC.Select(c => new { c.ETDO_ID, c.ETDO_DESC });
            if (id != 0)
            {
                ViewBag.check = 0;
                ViewBag.postid = 0;
                ViewBag.postinstid = 0;
                ViewBag.postline = id;
            }
            else
            {
                ViewBag.check = 1;
            }

            return View("Static_Post_NoteBook");
        }

        private string time_reques(decimal? p, int i)
        {
            string curent = string.Empty;
            var q = from j in Db.EXP_EDOC_INSTRU where j.EDIN_ID == p select j;

            if (q.FirstOrDefault() != null)
            {
                if (i == 1)
                {
                    curent = q.FirstOrDefault().OFF_DATE + " " + q.FirstOrDefault().OFF_TIME;
                }
                if (i == 2)
                {
                    curent = q.FirstOrDefault().ON_DATE + " " + q.FirstOrDefault().ON_TIME;
                }
            }

            return curent;
        }

        private string returninst(decimal? p)
        {
            string curentinst = string.Empty;
            var qp = (from j in Db.EXP_EDOC_INSTRU where j.EDIN_ID == p select j);

            if (qp != null)
            {
                var q = qp.FirstOrDefault();

                if (q != null)
                {
                    if (q.ETBY_ETBY_ID != null)
                    {
                        int idetby = Convert.ToInt32(q.ETBY_ETBY_ID);
                        string bayid = (from b in Db.EXP_TYPE_BAY where b.ETBY_ID == idetby select b.ETBY_DESC).FirstOrDefault().ToString();
                        int idepiu = Convert.ToInt32(q.EPIU_EPIU_ID);
                        string postinst = (from b in Db.EXP_POST_LINE_INSTRU where b.EPIU_ID == idepiu select b.CODE_NAME).FirstOrDefault().ToString();
                        curentinst = bayid + " " + postinst;
                    }
                    else
                    {
                        if (q.EPIU_EPIU_ID != null)
                        {
                            int idepiu = Convert.ToInt32(q.EPIU_EPIU_ID);
                            curentinst = (from b in Db.EXP_POST_LINE_INSTRU where b.EPIU_ID == idepiu select b.CODE_NAME).FirstOrDefault().ToString();
                        }
                        else
                        {
                            if (q.EINS_EINS_ID != null)
                            {
                                int ideins = Convert.ToInt32(q.EINS_EINS_ID);
                                curentinst = (from b in Db.EXP_INSTRUMENT where b.EINS_ID == ideins select b.EINS_DESC).FirstOrDefault().ToString();
                            }
                            else
                            {
                                curentinst = "کل پست";
                            }
                        }
                    }
                }
            }

            return curentinst;
        }

        private string time_prog(decimal? p, int i)
        {
            string curent = string.Empty;
            var q = from j in Db.EXP_EDOC_INSTRU
                    join k in Db.SEC_JOB_TYPE_DOC on j.JDTY_JDTY_ID equals k.JDTY_ID
                    where j.EDIN_EDIN_ID == p && k.ACTIV_NAME == "PROGRAMER"
                    select j;

            if (q.FirstOrDefault() != null)
            {
                if (i == 1)
                {
                    curent = q.FirstOrDefault().OFF_DATE + " " + q.FirstOrDefault().OFF_TIME;
                }
                if (i == 2)
                {
                    curent = q.FirstOrDefault().ON_DATE + " " + q.FirstOrDefault().ON_TIME;
                }
            }

            return curent;
        }

        private string functedo(decimal? pi, decimal? pd)
        {
            string curent = string.Empty;
            var q = from j in Db.EXP_CARF_V where j.I_EDIN_ID == pi select j;
            int tdx = 0;
            string stdi = string.Empty;
            string stdx = string.Empty;
            if (q.FirstOrDefault().X_ETDO_ETDO_ID != null)
            {
                tdx = Convert.ToInt32(q.FirstOrDefault().X_ETDO_ETDO_ID);
                stdx = (from x in Db.EXP_TYPE_DOC where x.ETDO_ID == tdx select x.ETDO_DESC).FirstOrDefault().ToString();
            }
            int tdi = 0;
            if (q.FirstOrDefault().I_ETDO_ETDO_ID != null)
            {
                tdi = Convert.ToInt32(q.FirstOrDefault().I_ETDO_ETDO_ID);

                stdi = (from x in Db.EXP_TYPE_DOC where x.ETDO_ID == tdi select x.ETDO_DESC).FirstOrDefault().ToString();
            }

            curent = stdx + " - " + stdi;
            return curent;
        }

        private string funcprog(decimal? pi)
        {
            string curent = string.Empty;
            var q = from j in Db.EXP_CARF_V where j.I_EDIN_ID == pi select j;
            int tdx = 0;
            string stdi = string.Empty;
            string stdx = string.Empty;
            if (q.FirstOrDefault().X_EFUN_EFUN_ID != null)
            {
                tdx = Convert.ToInt32(q.FirstOrDefault().X_EFUN_EFUN_ID);
                var qtdx = from x in Db.EXP_PROGRAM
                           join j in Db.EXP_PFUNCTION on x.EPRO_ID equals j.EPRO_EPRO_ID
                           where j.EFUN_ID == tdx
                           select new { j.EFUN_DESC, x.EPRO_DESC };
                stdx = qtdx.FirstOrDefault().EPRO_DESC + "-" + qtdx.FirstOrDefault().EFUN_DESC;
            }
            int tdi = 0;
            if (q.FirstOrDefault().I_EFUN_EFUN_ID != null)
            {
                tdi = Convert.ToInt32(q.FirstOrDefault().I_EFUN_EFUN_ID);
                var qdi = from x in Db.EXP_PROGRAM
                          join j in Db.EXP_PFUNCTION on x.EPRO_ID equals j.EPRO_EPRO_ID
                          where j.EFUN_ID == tdi
                          select new { j.EFUN_DESC, x.EPRO_DESC };
                stdi = qdi.FirstOrDefault().EPRO_DESC + "-" + qdi.FirstOrDefault().EFUN_DESC;
            }
            if (stdx != null && stdx != "")
            {
                curent = stdx;
            }
            else
            {
                if (stdi != null && stdi != "")
                {
                    curent = stdi;
                }
            }

            return curent;
        }

        private string Numrequest(decimal? pi)
        {
            string curent = string.Empty;
            var q = from j in Db.EXP_CARF_V where j.I_EDIN_ID == pi select j;
            int tdx = 0;
            string stdi = string.Empty;
            string stdx = string.Empty;
            if (q.FirstOrDefault().X_ETDO_ETDO_ID == 2)
            {
                tdx = Convert.ToInt32(q.FirstOrDefault().X_EEDO_ID);
                var qtdx = (from x in Db.EXP_RELATION_DOC
                            join j in Db.EXP_EXPI_DOC on x.EEDO_EEDO_ID equals j.EEDO_ID
                            where x.EEDO_EEDO_ID_R == tdx
                            select j.DOC_NUMB);

                if (qtdx.FirstOrDefault() != null)
                {
                    stdx = qtdx.FirstOrDefault().ToString();
                }
            }

            //int tdi = 0;
            if (q.FirstOrDefault().X_ETDO_ETDO_ID == 101)
            {
                tdx = Convert.ToInt32(q.FirstOrDefault().I_EDIN_ID);
                var qtdx = (from x in Db.EXP_RELATION_DOC
                            join j in Db.EXP_EXPI_DOC on x.EEDO_EEDO_ID equals j.EEDO_ID
                            where x.EDIN_EDIN_ID == tdx
                            select j.DOC_NUMB);
                if (qtdx.FirstOrDefault() != null)
                {
                    stdx = qtdx.FirstOrDefault().ToString();
                }
            }

            return stdx;
        }

        public ActionResult Get_EXP_EDOC_INSTRU([DataSourceRequest] DataSourceRequest request, string post, string inst, string date1, string date2, string ETDO)
        {
            int post1 = 0;
            if (post != null && post != "")
            {
                post1 = Convert.ToInt32(post);
            }

            decimal inst1 = 0;
            if (inst != null && inst != "")
            {
                inst1 = Convert.ToInt32(inst);
            }

            int etdo1 = 0;
            if (ETDO != null && ETDO != "")
            {
                etdo1 = Convert.ToInt32(ETDO);
            }

            if (date1 != null && date1 != "")
            {
                var query2 = (from b in Db.EXP_CARF_V.AsEnumerable()
                              where ((inst1 == 0 && ((b.I_ETDO_ETDO_ID != 21 && (b.I_EPOL_EPOL_ID == post1 || b.X_EPOL_EPOL_ID == post1 || post1 == 0)) ||
                                                     ((b.I_ETDO_ETDO_ID == 21 && b.I_JDTY_JDTY_ID == 97 && b.I_CUT_STAT == "1" &&
                                                       (b.I_EPOL_EPOL_ID == post1 || b.X_EPOL_EPOL_ID == post1 || post1 == 0))))) ||
                                     (inst1 != 0 && b.I_EPIU_EPIU_ID == inst1 &&
                                      ((b.I_ETDO_ETDO_ID != 21 && (b.I_EPOL_EPOL_ID == post1 || b.X_EPOL_EPOL_ID == post1)) ||
                                       (b.I_ETDO_ETDO_ID == 21 && b.I_JDTY_JDTY_ID == 97 && b.I_CUT_STAT == "1" &&
                                        (b.I_EPOL_EPOL_ID == post1 || b.X_EPOL_EPOL_ID == post1 || post1 == 0))))) &&
                                    ((b.I_OFF_DATE != null && b.I_OFF_DATE.CompareTo(date1) >= 0 && b.I_OFF_DATE.CompareTo(date2) <= 0) ||
                                     (b.X_EEDO_DATE != null && b.X_EEDO_DATE.CompareTo(date1) >= 0 && b.X_EEDO_DATE.CompareTo(date2) <= 0)) &&
                                    ((etdo1 != 0 && (b.I_ETDO_ETDO_ID == etdo1 || b.X_ETDO_ETDO_ID == etdo1)) || (etdo1 == 0))
                              orderby b.I_EDIN_ID
                              select b).Select(p => new
                              {
                                  etdocode = functedo(p.I_EDIN_ID, p.X_EEDO_ID),
                                  p.X_DOC_NUMB,
                                  p.I_EDIN_ID,
                                  inst = returninst(p.I_EDIN_ID),
                                  p.I_EDIN_OFF,
                                  off = p.I_OFF_DATE + " " + p.I_OFF_TIME,
                                  on = p.I_ON_DATE + " " + p.I_ON_TIME,
                                  /*   offreq = time_reques(p.I_EDIN_EDIN_ID, 1),
                                  onreq = time_reques(p.I_EDIN_EDIN_ID, 2),
                                  offprog = time_progout(p.I_EDIN_EDIN_ID, 1),
                                  onprog = time_progout(p.I_EDIN_EDIN_ID, 2),*/
                                  docnum = p.X_DOC_NUMB + " - " + p.X_EEDO_YEAR + p.X_EEDO_DATE,
                                  progfunc = funcprog(p.I_EDIN_ID),
                                  p.X_EEDO_DATE,
                                  p.X_DEFC_DESC,
                                  p.I_EINS_EINS_ID,
                                  d = p.I_CONT_FUN,
                                  p.I_EPIU_EPIU_ID,
                                  p.I_EDIN_STIN,
                                  p.I_JDTY_JDTY_ID,
                                  p.I_EPOL_EPOL_ID,
                                  p.I_EUNL_EUNL_ID,
                                  p.I_ETBY_ETBY_ID,
                                  p.I_EOFS_EOFS_ID,
                                  p.I_TIME_ISTA,
                                  p.I_INST_STAT,
                                  p.I_EART_STAT,
                                  p.I_CUST_STAT,
                                  p.I_CUT_STAT,
                                  //  numrequ = Numrequest(p.I_EDIN_ID)
                              });

                var d = new DataSourceResult
                {
                    Data = query2
                };
                return Json(d);
            }
            else
            {
                var query = (from b in Db.EXP_CARF_V.AsEnumerable()
                             where (inst1 == 0 && ((b.I_ETDO_ETDO_ID != 21 && (b.I_EPOL_EPOL_ID == post1 || b.X_EPOL_EPOL_ID == post1 || post1 == 0)) ||
                                                   ((b.I_ETDO_ETDO_ID == 21 && b.I_JDTY_JDTY_ID == 97 && b.I_CUT_STAT == "1" &&
                                                     (b.I_EPOL_EPOL_ID == post1 || b.X_EPOL_EPOL_ID == post1 || post1 == 0))))) ||
                                   (inst1 != 0 && b.I_EPIU_EPIU_ID == inst1 &&
                                    ((b.I_ETDO_ETDO_ID != 21 && (b.I_EPOL_EPOL_ID == post1 || b.X_EPOL_EPOL_ID == post1)) ||
                                     (b.I_ETDO_ETDO_ID == 21 && b.I_JDTY_JDTY_ID == 97 && b.I_CUT_STAT == "1" &&
                                      (b.I_EPOL_EPOL_ID == post1 || b.X_EPOL_EPOL_ID == post1 || post1 == 0)))) &&
                                   ((etdo1 != 0 && (b.I_ETDO_ETDO_ID == etdo1 || b.X_ETDO_ETDO_ID == etdo1)) || (etdo1 == 0))
                             orderby b.I_EDIN_ID
                             select b).Select(p => new
                             {
                                 etdocode = functedo(p.I_EDIN_ID, p.X_EEDO_ID),
                                 p.X_DOC_NUMB,
                                 p.I_EDIN_ID,
                                 inst = returninst(p.I_EDIN_ID),
                                 p.I_EDIN_OFF,
                                 off = p.I_OFF_DATE + " " + p.I_OFF_TIME,
                                 on = p.I_ON_DATE + " " + p.I_ON_TIME,
                                 /*   offreq = time_reques(p.I_EDIN_EDIN_ID, 1),
                                 onreq = time_reques(p.I_EDIN_EDIN_ID, 2),
                                 offprog = time_progout(p.I_EDIN_EDIN_ID, 1),
                                 onprog = time_progout(p.I_EDIN_EDIN_ID, 2),*/
                                 docnum = p.X_DOC_NUMB + " - " + p.X_EEDO_YEAR + p.X_EEDO_DATE,
                                 progfunc = funcprog(p.I_EDIN_ID),
                                 p.X_EEDO_DATE,
                                 p.X_DEFC_DESC,
                                 p.I_EINS_EINS_ID,
                                 d = p.I_CONT_FUN,
                                 p.I_EPIU_EPIU_ID,
                                 p.I_EDIN_STIN,
                                 p.I_JDTY_JDTY_ID,
                                 p.I_EPOL_EPOL_ID,
                                 p.I_EUNL_EUNL_ID,
                                 p.I_ETBY_ETBY_ID,
                                 p.I_EOFS_EOFS_ID,
                                 p.I_TIME_ISTA,
                                 p.I_INST_STAT,
                                 p.I_EART_STAT,
                                 p.I_CUST_STAT,
                                 p.I_CUT_STAT,
                                 //  numrequ = Numrequest(p.I_EDIN_ID)
                             });

                var d = new DataSourceResult
                {
                    Data = query
                };
                return Json(d);
            }
        }

        private string time_null()
        {
            return null;
        }

        private string time_progout(decimal? p, int i)
        {
            string curent = string.Empty;
            var q = from j in Db.EXP_EDOC_INSTRU
                    join k in Db.SEC_JOB_TYPE_DOC on j.JDTY_JDTY_ID equals k.JDTY_ID
                    where j.EDIN_EDIN_ID == p && k.ACTIV_NAME == "PROGRAMER"
                    select j;

            if (q.FirstOrDefault() == null)
            {
                var q1 = from j in Db.EXP_EDOC_INSTRU
                         where j.EDIN_ID == p
                         select j;

                if (q1.FirstOrDefault() != null)
                {
                    if (i == 1)
                    {
                        curent = q1.FirstOrDefault().OFF_DATE + " " + q1.FirstOrDefault().OFF_TIME;
                    }
                    if (i == 2)
                    {
                        curent = q1.FirstOrDefault().ON_DATE + " " + q1.FirstOrDefault().ON_TIME;
                    }
                }
                return curent;
            }
            else
            {
                if (q.FirstOrDefault() != null)
                {
                    if (i == 1)
                    {
                        curent = q.FirstOrDefault().OFF_DATE + " " + q.FirstOrDefault().OFF_TIME;
                    }
                    if (i == 2)
                    {
                        curent = q.FirstOrDefault().ON_DATE + " " + q.FirstOrDefault().ON_TIME;
                    }
                }
                return curent;
            }
        }

        public ActionResult read_doccart()
        {
            var query = (from b in Db.EXP_TYPE_DOC
                         where b.ETDO_ID == 21 || b.ETDO_ID == 2 || b.ETDO_ID == 101 || b.ETDO_ID == 164 || b.ETDO_ID == 61 || b.ETDO_ID == 144
                         orderby b.ETDO_ID descending
                         select new { b.ETDO_ID, b.ETDO_DESC }).ToList().OrderBy(x => x.ETDO_DESC);
            return Json(query, JsonRequestBehavior.AllowGet);
        }

        public ActionResult info_Doc(int? id)
        {
            ViewData["post_line"] = Db.EXP_POST_LINE.Select(o => new { o.EPOL_ID, o.EPOL_NAME }).AsEnumerable();
            ViewData["project"] = Db.CGT_PRO.Where(o => o.CPRO_PRJ_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_PRJ_CODE).FirstOrDefault())
                                            .Where(o => o.CPLA_PLN_CODE == Db.EXP_EXPI_DOC.Select(p => p.CPRO_CPLA_PLN_CODE).FirstOrDefault())
                                            .Select(o => new { o.PRJ_CODE, o.PRJ_DESC })
                                            .AsEnumerable();
            ViewData["Organ"] = Db.PAY_ORGAN.Select(o => new { o.CODE, o.ORGA_DESC }).AsEnumerable();
            ViewData["Type_Doc"] = Db.EXP_EXPI_DOC.Select(o => new { o.EEDO_ID, o.EXP_TYPE_DOC, o.ETDO_ETDO_ID, o.EXP_TYPE_DOC.ETDO_DESC }).Where(o => o.ETDO_ETDO_ID == o.EXP_TYPE_DOC.ETDO_ID).AsEnumerable();
            ViewData["Doc_val"] = Db.EXP_EITEM_DOC_VALUE.Select(o => new { o.EIDR_ID, o.EIDR_VALUE });
            ViewData["post_instr"] = Db.EXP_POST_LINE_INSTRU.Select(o => new { o.EINS_EINS_ID, o.CODE_DISP });
            ViewData["JDTYid"] = Db.SEC_JOB_TYPE_DOC.Select(o => new { o.JDTY_ID, o.ACTIV_FNAM });
            ViewBag.Instrument = Db.EXP_INSTRUMENT.Where(c => c.EINS_EINS_ID != null).Select(c => new { c.EINS_ID, c.EINS_DESC });
            ViewBag.Bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.typedoc = Db.EXP_TYPE_DOC.Select(c => new { c.ETDO_ID, c.ETDO_DESC });

            if (id != null)
            {
                EXP_CARF_V cartinf = (from b in Db.EXP_CARF_V where b.I_EDIN_ID == id select b).FirstOrDefault();
                return View(cartinf);
            }
            else
            {
                return View(".../EXP_DOC/ErrorNotFound");
            }
        }

    }

}