using Asr.Cartable;
using Equipment.Controllers.Message.Message;
using Equipment.Models;
using Equipment.Models.CoustomModel;
using Kendo.Mvc.Extensions;
using Kendo.Mvc.UI;
using Oracle.ManagedDataAccess.Client;
using System;
using System.Data;
using System.Linq;

using System.Web.Mvc;

namespace Equipment.Controllers.Exploitation.ElectronicReq
{
    [Authorize]
    public class ElecReqController : DbController
    {
        string username = string.Empty;

        //سازنده کلاس

        public ElecReqController()
            : base()
        {
            // Db = this.DB();
            username = this.UserInfo().Username;
        }

        //~ElecReqController()
        //{
        //    //این دستور کانکشن را دیسکانکت میکند
        //    Db.Dispose();
        //}

        /*اولین  اکشن در این کنتولر که برای باز شدن فرم برقدار شدن  استفاده شده است */
        public ActionResult Index()
        {
            return View();
        }
        public ActionResult SearchForm()
        {
            return View();
        }

        public ActionResult ReceiveForm()
        {
            return View();
        }

        public ActionResult Add_Item(int? id)
        {
            ViewData["EEDO_ID"] = id;
            return View();
        }

        public ActionResult Update(int? id)
        {
            ViewData["EEDO_ID"] = id;
            return View();
        }

        public ActionResult ConfirmForm(string id, string notId)
        {
            Session["notid"] = notId;
            ViewBag.key = notId;
            ViewData["EEDO_ID"] = id;
            return View();
        }

        public JsonResult sendstartnode(int notId)
        {
            AsrWorkFlowProcess wp = new AsrWorkFlowProcess(notId);
            // wp.SetKeyValue("MY_FLAG", "1");
            //            string idrole = "DFANI";
            // AsrJobProvider jp = new AsrJobProvider(idrole, "FLW_ELRE");
            //return this.Json(new { Success = true, data = jp.AllUsers }, JsonRequestBehavior.AllowGet);
            return this.Json(new { Success = true, data = wp.GetNextStepUsers() }, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetPrevState(int notId)
        {
            AsrWorkFlowProcess wp = new AsrWorkFlowProcess(notId);
            // wp.SetKeyValue("MY_FLAG", "1");
            //            string idrole = "DFANI";
            // AsrJobProvider jp = new AsrJobProvider(idrole, "FLW_ELRE");
            //return this.Json(new { Success = true, data = jp.AllUsers }, JsonRequestBehavior.AllowGet);
            return this.Json(new { Success = true, data = wp.GetPreStepUsers() }, JsonRequestBehavior.AllowGet);
        }

        public string GetCreatorStatus(decimal EEDO_ID)
        {
            return Db.Database.SqlQuery<string>(string.Format("SELECT  stat FROM WF_NOTE_V WHERE message_type='FLW_ELRE' and MESSAGE_NAME='CREATOR' and upper(RECIPIENT_ROLE)='{0}' and SUBSTR( ITEM_KEY,20,LENGTH(ITEM_KEY)-19)='{1}' order by not_id desc", username.ToUpper(), EEDO_ID)).FirstOrDefault();
        }

        public ActionResult GetList([DataSourceRequest] DataSourceRequest request)
        {
            var query = (from a in Db.EXP_EXPI_DOC
                         join b in Db.CNT_CONTRACT on a.CCNT_CNTR_NO equals b.CNTR_NO
                         //join c in Db.EXP_EDOC_INSTRU on a.EEDO_ID equals c.EEDO_EEDO_ID
                         where a.ETDO_ETDO_ID == 81 && (a.CRET_BY == username || username.ToUpper() == "S-KHADEMI" || username.ToUpper() == "B-DISPACHING")
                         orderby a.EEDO_ID descending
                         select new
                         {
                             EPOL_NAME = a.EXP_POST_LINE.EPOL_NAME,
                             CNTR_TITL = b.CNTR_NO + " " + b.TITL,
                             a.EEDO_TITL,
                             //CODE_NAME=c.EXP_POST_LINE_INSTRU.CODE_NAME  + "-"+ c.EXP_POST_LINE_INSTRU.CODE_DISP ,
                             a.DOC_NUMB,
                             a.EEDO_DESC,
                             a.FIRS_DATE,
                             a.FIRS_TIME,
                             a.EEDO_ID,
                             a.EEDO_DATE,
                             a.EEDO_TIME,
                             //LETT_TYPE = a.LETT_TYPE == "0" ? "ایجاد" :a.LETT_TYPE == "1"? "تعویض": "بازسازی و نوسازی",
                             a.END_DATE,
                             a.CCNT_CNTR_NO,
                             a.LETT_TYPE,
                             CONF_TYPE = a.CONF_TYPE == "0" ? "رفع عیب شده" : "عدم رفع عیب",
                             //STAT = GetCreatorStatus(a.EEDO_ID)
                         }).ToList().Distinct();

            var query2 = query.Select(a => new
            {
                a.EPOL_NAME,
                a.CNTR_TITL,
                a.EEDO_TITL,
                //a.CODE_NAME,
                a.DOC_NUMB,
                a.EEDO_DESC,
                a.FIRS_DATE,
                a.FIRS_TIME,
                a.EEDO_ID,
                a.EEDO_DATE,
                a.EEDO_TIME,
                a.LETT_TYPE,
                a.END_DATE,
                a.CCNT_CNTR_NO,
                a.CONF_TYPE,
                STAT = GetCreatorStatus(a.EEDO_ID) == null ? "CLOSED" : "OPEN"
            }).ToList().Distinct();

            return Json(query2.ToDataSourceResult(request), JsonRequestBehavior.AllowGet);
        }

        public ActionResult SearchResult([DataSourceRequest] DataSourceRequest request, int? EPOL_ID, string CCNT_CNTR_NO, string DOC_NUMB, string SEEDO_DATE, string EEEDO_DATE
            , string LETT_TYPE, string EEDO_DESC, string EEDO_TITL)
        {
            var query = (from a in Db.EXP_EXPI_DOC
                         join b in Db.CNT_CONTRACT on a.CCNT_CNTR_NO equals b.CNTR_NO
                         //join c in Db.EXP_EDOC_INSTRU on a.EEDO_ID equals c.EEDO_EEDO_ID
                         where a.ETDO_ETDO_ID == 81 && (a.EPOL_EPOL_ID == EPOL_ID || EPOL_ID == null)
                          && (b.CNTR_NO == CCNT_CNTR_NO || CCNT_CNTR_NO == null)
                          && a.DOC_NUMB.ToUpper().Contains(DOC_NUMB)
                          && (a.LETT_TYPE == LETT_TYPE || LETT_TYPE == null)
                         // && a.EEDO_DESC.ToUpper().Contains(EEDO_DESC)
                          && a.EEDO_TITL.ToUpper().Contains(EEDO_TITL)
                          && ((a.EEDO_DATE.CompareTo(SEEDO_DATE) >= 0 || SEEDO_DATE == null) && (a.EEDO_DATE.CompareTo(EEEDO_DATE) <= 0 || EEEDO_DATE == null))
                         orderby a.EEDO_ID descending
                         select new
                         {
                             EPOL_NAME = a.EXP_POST_LINE.EPOL_NAME,
                             CNTR_TITL = b.CNTR_NO + " " + b.TITL,
                             a.EEDO_TITL,
                             //CODE_NAME=c.EXP_POST_LINE_INSTRU.CODE_NAME  + "-"+ c.EXP_POST_LINE_INSTRU.CODE_DISP ,
                             a.DOC_NUMB,
                             a.EEDO_DESC,
                             a.FIRS_DATE,
                             a.FIRS_TIME,
                             a.EEDO_ID,
                             a.EEDO_DATE,
                             a.EEDO_TIME,
                             //LETT_TYPE = a.LETT_TYPE == "0" ? "ایجاد" :a.LETT_TYPE == "1"? "تعویض": "بازسازی و نوسازی",
                             a.END_DATE,
                             a.CCNT_CNTR_NO,
                             a.LETT_TYPE,
                             CONF_TYPE = a.CONF_TYPE == "0" ? "رفع عیب شده" : "عدم رفع عیب",
                             //STAT = GetCreatorStatus(a.EEDO_ID)
                         }).ToList().Distinct();

            var query2 = query.Select(a => new
            {
                a.EPOL_NAME,
                a.CNTR_TITL,
                a.EEDO_TITL,
                //a.CODE_NAME,
                a.DOC_NUMB,
                a.EEDO_DESC,
                a.FIRS_DATE,
                a.FIRS_TIME,
                a.EEDO_ID,
                a.EEDO_DATE,
                a.EEDO_TIME,
                a.LETT_TYPE,
                a.END_DATE,
                a.CCNT_CNTR_NO,
                a.CONF_TYPE,
                STAT = GetCreatorStatus(a.EEDO_ID) == null ? "CLOSED" : "OPEN"
            }).ToList().Distinct();

            return Json(query2.ToDataSourceResult(request), JsonRequestBehavior.AllowGet);
        }


        public ActionResult Add_Suplier(decimal EEDO_EEDO_ID)
        {
            var objecttemp = new EXP_SUPL_DOC();
            Cartable.CartableController Cartable = new Cartable.CartableController();
            AsrWorkFlowProcess wp = new AsrWorkFlowProcess();
            MessageController ObjMessage = new MessageController();
            string DocNumber = Db.EXP_EXPI_DOC.Where(xx => xx.EEDO_ID == EEDO_EEDO_ID).Select(xx => xx.DOC_NUMB).FirstOrDefault();

            var query = (from a in Db.PAY_PERSONEL
                         join b in Db.SEC_USERS on a.EMP_NUMB equals b.PRSN_EMP_NUMB
                         join c in Db.SEC_USER_TYPE_POST on b.ROW_NO equals c.SCSU_ROW_NO
                         where (c.EANA_EANA_ROW == 4 || c.EANA_EANA_ROW == 5 || c.EANA_EANA_ROW == 6 || c.EANA_EANA_ROW == 7
                                || c.EANA_EANA_ROW == 242 || c.EANA_EANA_ROW == 201 || c.EANA_EANA_ROW == 401 ||
                                c.EANA_EANA_ROW == 18 || c.EANA_EANA_ROW == 17 || c.EANA_EANA_ROW == 402 || c.EANA_EANA_ROW == 403
                                || c.EANA_EANA_ROW == 404 || c.EANA_EANA_ROW == 701 || c.EANA_EANA_ROW == 521 || c.EANA_EANA_ROW == 561
                                ) && c.EURP_TYPE == 0 && c.EURP_ACTV == 1
                         select new
                         {
                             ROW_NO = b.ROW_NO,
                             ORCL_NAME = b.ORCL_NAME,
                             a.EMP_NUMB,
                             Username = b.USER_NAME
                         }).ToList();

            foreach (var item in query)
            {
                objecttemp.EEDO_EEDO_ID = EEDO_EEDO_ID;
                objecttemp.PRSN_EMP_NUMB = item.EMP_NUMB;
                Db.EXP_SUPL_DOC.Add(objecttemp);
                var querycheck = from b in Db.EXP_SUPL_DOC
                                 where b.EEDO_EEDO_ID == EEDO_EEDO_ID && b.PRSN_EMP_NUMB == item.EMP_NUMB
                                 select b;

                if (!querycheck.Any())
                {
                    Db.SaveChanges();
                }

                //var message = new Asr.Cartable.AsrWorkFlowMessage(User.Identity.Name, new string[] { item.ORCL_NAME }, "برقدار کردن", "فرم برقدار شدن به کد " + EEDO_EEDO_ID + "  برای  شما ارسال شد.لطفا از منوی بهره برداری قسمت فرم برقدار کردن، فرم را بررسی و تکمیل نمایید.");
                //message.Send();

                wp.StartProcess(this.HttpContext.User.Identity.Name, new string[] { item.ORCL_NAME }, "برقدار کردن", "فرم برقدار شدن به کد " + DocNumber + "  برای  شما ارسال شد.لطفا از منوی بهره برداری قسمت فرم برقدار کردن، فرم را بررسی و تکمیل نمایید.", 643, EEDO_EEDO_ID + "-" + item.ROW_NO);
                int not_id = wp.NoteId;
                wp = new AsrWorkFlowProcess(not_id);
                wp.Approve(new string[] { item.ORCL_NAME }, "فرم برقدار شدن به کد " + DocNumber + "  برای  شما ارسال شد.");



                string Mobile = Db.SEC_USERS.Where(xx => xx.ORCL_NAME.ToUpper() == item.Username.ToUpper()).Select(xx => xx.PAY_PERSONEL.MOBIL).FirstOrDefault();

                ObjMessage.Send_Simple_SMS(Mobile, " نامه تایید فرم برقدار کردن به شماره" + DocNumber + " به کارتابل شما ارسال شد");





            }

            var query2 = (from b in Db.EXP_OUT_PERSONEL
                          where b.CCNT_CNTR_NO == Db.EXP_EXPI_DOC.Where(xx => xx.EEDO_ID == EEDO_EEDO_ID && xx.ETDO_ETDO_ID == 81).Select(xx => xx.CCNT_CNTR_NO).FirstOrDefault()
                                && (b.OUTP_SEMAT == "9" || b.OUTP_SEMAT == "10")
                          select new { b.OUTP_ID }).ToList();

            foreach (var item in query2)
            {
                objecttemp.EEDO_EEDO_ID = EEDO_EEDO_ID;
                objecttemp.OUTP_OUTP_ID = item.OUTP_ID;
                objecttemp.PRSN_EMP_NUMB = null;
                Db.EXP_SUPL_DOC.Add(objecttemp);
                var querycheck = from b in Db.EXP_SUPL_DOC
                                 where b.EEDO_EEDO_ID == EEDO_EEDO_ID && b.OUTP_OUTP_ID == item.OUTP_ID
                                 select b;

                if (!querycheck.Any())
                {
                    Db.SaveChanges();
                }
            }

            return new ServerMessages(ServerOprationType.Success) { Message = string.Format("اطلاعات با موفقیت ثبت شد") }.ToJson();
        }


        public ActionResult SendMessage(string ORCL_NAME, string Title, string Body)
        {
            var message = new Asr.Cartable.AsrWorkFlowMessage(User.Identity.Name, new string[] { ORCL_NAME }, Title, Body);
            message.Send();
            var query = (from a in Db.PAY_PERSONEL
                         join b in Db.SEC_USERS on a.EMP_NUMB equals b.PRSN_EMP_NUMB
                         join c in Db.SEC_USER_TYPE_POST on b.ROW_NO equals c.SCSU_ROW_NO
                         where (c.EANA_EANA_ROW == 4 || c.EANA_EANA_ROW == 5 || c.EANA_EANA_ROW == 6 || c.EANA_EANA_ROW == 7
                                || c.EANA_EANA_ROW == 242 || c.EANA_EANA_ROW == 201 || c.EANA_EANA_ROW == 401 ||
                                c.EANA_EANA_ROW == 18 || c.EANA_EANA_ROW == 17 || c.EANA_EANA_ROW == 402 || c.EANA_EANA_ROW == 403
                                || c.EANA_EANA_ROW == 404
                                ) && c.EURP_TYPE == 0 && c.EURP_ACTV == 1
                         select new
                         {
                             ROW_NO = b.ROW_NO,
                             ORCL_NAME = b.ORCL_NAME,
                             a.EMP_NUMB
                         }).ToList();

            foreach (var item in query)
            {
                message = new Asr.Cartable.AsrWorkFlowMessage(User.Identity.Name, new string[] { item.ORCL_NAME }, Title, Body);
                message.Send();
            }

            return new ServerMessages(ServerOprationType.Success) { Message = string.Format("اطلاعات با موفقیت ثبت شد") }.ToJson();
        }

        public ActionResult Insert(EXP_EXPI_DOC objecttemp)
        {
            if (Db.EXP_EXPI_DOC.Where(xx => xx.DOC_NUMB == objecttemp.DOC_NUMB && xx.ETDO_ETDO_ID == 81).Any())
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = string.Format("شماره نامه وارد شده تکراری میباشد") }.ToJson();
            }

            try
            {



                objecttemp.ETDO_ETDO_ID = 81;
                //string EPIU_EPIU_ID = Request.Form["POSTINSTTT"];
                decimal? MaxId = 0;
                if (!Db.EXP_EXPI_DOC.Where(xx => xx.ETDO_ETDO_ID == 81).Any())
                {

                    MaxId = 1;
                }
                else
                {
                    MaxId = Db.EXP_EXPI_DOC.Where(xx => xx.ETDO_ETDO_ID == 81).Select(xx => xx.EEDO_ID).Max();
                }
                objecttemp.DOC_NUMB = objecttemp.EEDO_DATE.Substring(0, 4) + "_" + MaxId.ToString();
                Db.EXP_EXPI_DOC.Add(objecttemp);
                Db.SaveChanges();
                var EXP_EDOC_INSTRU = new EXP_EDOC_INSTRU();
                int?[] eins_id = { 365, 367, 366, 281, 364, 644, 3, 372, 4 };

                if (!string.IsNullOrEmpty(Request.Form["allinstru"]))
                {
                    var allinstru = from a in Db.EXP_POST_LINE_INSTRU
                                    join b in Db.EXP_INSTRUMENT on a.EINS_EINS_ID equals b.EINS_ID
                                    where (a.EPOL_EPOL_ID == objecttemp.EPOL_EPOL_ID ||
                                          a.EPOL_EPOL_ID_INSLIN == objecttemp.EPOL_EPOL_ID)
                                          && (b.ESIN_ESIN_ID == 3 || b.ESIN_ESIN_ID == 1) && b.ETYI_ETYI_ID == 1 && eins_id.Contains(b.EINS_EINS_ID)

                                    select a;

                    foreach (var item in allinstru)
                    {
                        EXP_EDOC_INSTRU.EEDO_EEDO_ID = objecttemp.EEDO_ID;
                        EXP_EDOC_INSTRU.EPIU_EPIU_ID = item.EPIU_ID;
                        EXP_EDOC_INSTRU.ETDO_ETDO_ID = 81;
                        Db.EXP_EDOC_INSTRU.Add(EXP_EDOC_INSTRU);
                        Db.SaveChanges();
                    }
                }
                //else
                //{
                //    EXP_EDOC_INSTRU.EEDO_EEDO_ID = objecttemp.EEDO_ID;
                //    EXP_EDOC_INSTRU.EPIU_EPIU_ID = decimal.Parse(EPIU_EPIU_ID);
                //    EXP_EDOC_INSTRU.ETDO_ETDO_ID = 81;
                //    Db.EXP_EDOC_INSTRU.Add(EXP_EDOC_INSTRU);
                //    Db.SaveChanges();
                //}

                string bodymessage = " نامه برقدار کردن به شماره " + objecttemp.DOC_NUMB + " در تاریخ " + objecttemp.EEDO_DATE + "ایجاد شد";
                int not_id = 0;

                AsrWorkFlowProcess wp = new AsrWorkFlowProcess();
                wp.StartProcess(this.HttpContext.User.Identity.Name, new string[] { this.HttpContext.User.Identity.Name }, objecttemp.DOC_NUMB, bodymessage, 81, objecttemp.EEDO_ID);
                not_id = wp.NoteId;
                return new ServerMessages(ServerOprationType.Success) { Message = string.Format("اطلاعات با موفقیت ثبت شد ") }.ToJson();
            }
            catch (Exception ex)
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = string.Format("خطا در ثبت اطلاعات  ") }.ToJson();
            }
        }

        public ActionResult insert_suplier_data(EXP_SUPL_DOC objecttemp)
        {
            try
            {
                Db.Database.ExecuteSqlCommand(string.Format("update exp_supl_doc set ESUD_CONF={0},ESUD_DESC='{1}' where EEDO_EEDO_ID={2} and PRSN_EMP_NUMB='{3}'", objecttemp.ESUD_CONF, objecttemp.ESUD_DESC, objecttemp.EEDO_EEDO_ID, objecttemp.PRSN_EMP_NUMB));
                return new ServerMessages(ServerOprationType.Success) { Message = string.Format("اطلاعات با موفقیت ثبت شد ") }.ToJson();
            }
            catch (Exception ex)
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = string.Format("خطا در ثبت اطلاعات  ") }.ToJson();
            }
        }

        public ActionResult insert_instru(string EPIU_EPIU_ID, int EPOL_EPOL_ID, int EEDO_EEDO_ID)
        {
            try
            {
                EXP_EDOC_INSTRU objecttemp = new EXP_EDOC_INSTRU();
                //string EPIU_EPIU_ID = Request.Form["POSTINSTTT"];
                objecttemp.EPIU_EPIU_ID = decimal.Parse(EPIU_EPIU_ID);
                objecttemp.EEDO_EEDO_ID = EEDO_EEDO_ID;
                objecttemp.EPOL_EPOL_ID = EPOL_EPOL_ID;
                int? EINS_ID = Db.EXP_POST_LINE_INSTRU.Where(xx => xx.EPIU_ID == objecttemp.EPIU_EPIU_ID).Select(xx => xx.EINS_EINS_ID).FirstOrDefault();

                if (!Db.EXP_EDOC_INSTRU.Where(xx => xx.EEDO_EEDO_ID == objecttemp.EEDO_EEDO_ID).Where(xx => xx.EPIU_EPIU_ID == objecttemp.EPIU_EPIU_ID).Any())
                {
                    Db.EXP_EDOC_INSTRU.Add(objecttemp);
                    Db.SaveChanges();
                    return new ServerMessages(ServerOprationType.Success) { Message = string.Format("اطلاعات با موفقیت ثبت شد ") }.ToJson();
                }
                else
                {
                    return new ServerMessages(ServerOprationType.Failure) { Message = string.Format("اطلاعات  وارد شده تکراری می باشد ") }.ToJson();
                }
            }
            catch (Exception ex)
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = string.Format("خطا در ثبت اطلاعات  ") }.ToJson();
            }
        }

        public ActionResult Get_Instru([DataSourceRequest] DataSourceRequest request, decimal EEDO_ID)
        {
            var query = (from p in Db.EXP_EDOC_INSTRU
                         where p.EEDO_EEDO_ID == EEDO_ID
                         orderby p.EXP_POST_LINE_INSTRU.EINS_EINS_ID
                         select new
                         {
                             p.EPIU_EPIU_ID,
                             EPOL_NAME = p.EXP_POST_LINE.EPOL_NAME,
                             CODE_NAME = p.EXP_POST_LINE_INSTRU.CODE_NAME,
                             ////   EPOL_EPOL_ID = p.EXP_POST_GROUP.EXP_POST_LINE.EPOL_ID,
                             CODE_DISP = p.EXP_POST_LINE_INSTRU.CODE_DISP,
                             p.EDIN_ID
                         }).ToList();

            return Json(query.ToDataSourceResult(request));
        }

        public ActionResult ViewForm(string id, string notId)
        {
            Session["notid"] = notId;
            ViewBag.key = notId;
            ViewData["EEDO_ID"] = id;
            return View("PartialViewForm");
        }

        public ActionResult Update_Data(Equipment.Models.EXP_EXPI_DOC NewItem)
        {
            try
            {
                string sql = string.Format("update EXP_EXPI_DOC set EEDO_TITL='{0}',DOC_NUMB='{1}',EEDO_DATE='{2}',FIRS_DATE='{3}',CCNT_CNTR_NO='{4}',EPOL_EPOL_ID='{5}',LETT_TYPE='{6}',EEDO_DESC='{7}' where  EEDO_ID={8}",
                                            NewItem.EEDO_TITL,
                                            NewItem.DOC_NUMB,
                                            NewItem.EEDO_DATE,
                                            NewItem.FIRS_DATE,
                                            NewItem.CCNT_CNTR_NO,
                                            NewItem.EPOL_EPOL_ID,
                                            NewItem.LETT_TYPE,
                                            NewItem.EEDO_DESC,
                                            NewItem.EEDO_ID);
                Db.Database.ExecuteSqlCommand(sql);
                // EXP_EXPI_DOC query = (from a in Db.EXP_EXPI_DOC where  a.EEDO_ID == NewItem.EEDO_ID
                //             select a).FirstOrDefault();
                //
                // query.EEDO_TITL = NewItem.EEDO_TITL;
                // query.DOC_NUMB =  NewItem.DOC_NUMB;
                // query.EEDO_DATE = NewItem.EEDO_DATE;
                // query.FIRS_DATE = NewItem.FIRS_DATE;
                // query.CCNT_CNTR_NO = NewItem.CCNT_CNTR_NO;
                // query.EPOL_EPOL_ID = NewItem.EPOL_EPOL_ID;
                // query.LETT_TYPE = NewItem.LETT_TYPE;
                // query.EEDO_DESC = NewItem.EEDO_DESC;                
                // Db.SaveChanges();

                return new ServerMessages(ServerOprationType.Success) { Message = string.Format("اطلاعات با موفقیت ثبت شد ") }.ToJson();
            }
            catch (Exception ex)
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = string.Format("خطا در ثبت اطلاعات  ") }.ToJson();
            }
        }
        public ActionResult UpdateEndDate(EXP_EXPI_DOC NewItem)
        {
            try
            {
                string sql = string.Format("update EXP_EXPI_DOC set END_DATE='{0}',END_TIME='{1}' where  EEDO_ID={2}",
                                            NewItem.END_DATE,
                                            NewItem.END_TIME,
                                            NewItem.EEDO_ID);
                Db.Database.ExecuteSqlCommand(sql);


                return new ServerMessages(ServerOprationType.Success) { Message = string.Format("اطلاعات با موفقیت ثبت شد ") }.ToJson();
            }
            catch (Exception ex)
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = string.Format("خطا در ثبت اطلاعات  ") }.ToJson();
            }
        }

        public ActionResult ReceiveFormGrid([DataSourceRequest] DataSourceRequest request)
        {
            var query = (from a in Db.EXP_EXPI_DOC
                         join b in Db.CNT_CONTRACT on a.CCNT_CNTR_NO equals b.CNTR_NO
                         join c in Db.EXP_SUPL_DOC on a.EEDO_ID equals c.EEDO_EEDO_ID
                         where a.ETDO_ETDO_ID == 81 && c.PRSN_EMP_NUMB == Db.SEC_USERS.Where(xx => xx.ORCL_NAME == this.User.Identity.Name).Select(xx => xx.PRSN_EMP_NUMB).FirstOrDefault()
                         orderby a.EEDO_DATE descending
                         select new
                         {
                             EPOL_NAME = a.EXP_POST_LINE.EPOL_NAME,
                             CNTR_TITL = b.CNTR_NO + " " + b.TITL,
                             a.EEDO_TITL,
                             a.DOC_NUMB,
                             a.EEDO_DESC,
                             a.FIRS_DATE,
                             a.FIRS_TIME,
                             a.EEDO_ID,
                             a.EEDO_DATE,
                             a.EEDO_TIME,
                             a.END_DATE,
                             a.CCNT_CNTR_NO,
                             a.LETT_TYPE,
                             ESUD_CONF = c.ESUD_CONF == 0 ? "عدم تایید" : "تایید شده",
                         }).ToList().Distinct();

            return Json(query.ToDataSourceResult(request), JsonRequestBehavior.AllowGet);

        }

    }

}