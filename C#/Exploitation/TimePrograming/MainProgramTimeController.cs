using Asr.Cartable;
using Equipment.Codes.Security;
using Equipment.Models;
using Equipment.Models.CoustomModel;
using Kendo.Mvc.Extensions;
using Kendo.Mvc.UI;
using System;
using System.Linq;
using System.Web.Mvc;

namespace Equipment.Controllers.Exploitation.TimePrograming
{
    [Authorize]
    public partial class TimeProgramingController : DbController
    {

        private string backtypephaz(string i)
        {
            if (i == "0") return " فاز R";
            else
                if (i == "1") return "فاز S";
                else if (i == "2") return "فاز T";
                else return " ";
        }

        [MenuAuthorize]
        /*دومین  اکشنی که برای باز شدن فرم ایجاد برنامه زمانبندی استفاده شده است  می باشد */
        public ActionResult MainProgramTime()
        {
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            return View("MainProgramTime");
        }

        /* سومین  اکشنی که برای باز شدن فرم تعیین زمان برنامه  استفاده شده است  */
        [MenuAuthorize]
        public ActionResult ProgramTime()
        {
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            return View("ProgramTime");
        }

        [MenuAuthorize]
        public ActionResult ProgramTime2()
        {
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            return View();
        }


        //private IQueryable FilterData(string year, string organ, int? volt, int? post, int? inst, int? bay, int? prog, int? func)
        //{
        //    var query = (from b in Context.EXP_TIPR_V
        //                 where (b.EXPI_EEDO_YEAR == year) //.Equals(year) || year == null)
        //                 && (b.POST_ORGA_CODE == organ || organ == null)
        //                 && (b.POST_EUNL_EUNL_ID == volt || volt == null)
        //                 && (b.POST_EPOL_ID == post || post == null)
        //                 && ((b.INST_EINS_EINS_ID == inst && b.BAY_ETBY_ID == null) || inst == null)
        //                 && (b.BAY_ETBY_ID == bay || bay == null)
        //                 && (b.PROG_EPRO_ID == prog || prog == null)
        //                 && (b.FUNC_EFUN_ID == func || func == null)
        //                 //&& (b.EDOC_OFF_DATE != null && b.EDOC_ON_DATE != null)
        //                 select b);
        //    return query;
        //}

        [EntityAuthorize("EXP_TIPR_V > select")]
        [AcceptVerbs(HttpVerbs.Post)]
        public ActionResult Exp_TimeProg_R2([DataSourceRequest] DataSourceRequest request, string year, string organ, int? volt, int? post, int? inst, int? instdetail, int? bay, int? prog, int? func, int? trans)
        {
            //var query = FilterData(year, organ, volt, post, inst, bay, prog, func);
            var query = (from b in Db.EXP_TIPR_V
                         where (b.EXPI_EEDO_YEAR == year) //.Equals(year) || year == null)
                         && (b.POST_ORGA_CODE == organ || organ == null)
                         && (b.POST_EUNL_EUNL_ID == volt || volt == null)
                             //&& (b.POST_EPOL_ID == post || post == null)
                         && (b.POST_EPOL_ID == post || b.INST_EPOL_EPOL_ID_LINE == post || b.INST_EPOL_EPOL_ID_INSLIN == post || post == null)
                         && ((b.INST_EINS_EINS_ID == inst && b.BAY_ETBY_ID == null) || inst == null)
                         && (b.BAY_ETBY_ID == bay || bay == null)
                         && (b.PROG_EPRO_ID == prog || prog == null)
                         && (b.FUNC_EFUN_ID == func || func == null)
                         && (b.EDOC_EPIU_EPIU_ID == instdetail || instdetail == null)
                             //&& (b.EDOC_OFF_DATE != null && b.EDOC_ON_DATE != null)
                         && (b.INST_EPIU_EPIU_ID_RT == trans || trans == null)
                         select new
                         {
                             b.EDOC_EDIN_ID,
                             b.ORGN_ORGA_DESC,
                             b.POST_EPOL_NAME,
                             b.BAY_ETBY_DESC,
                             b.INST_CODE_NAME,
                             instName = (b.INST_EINS_EINS_ID == 1 && b.EDOC_EUNL_EUNL_ID == 201) ? b.INST_CODE_NAME + " (" + b.INST2_CODE_NAME + ")" : b.INST_CODE_NAME,
                             b.EDOC_EUNL_EUNL_ID,
                             b.PROG_EPRO_DESC,
                             b.FUNC_EFUN_DESC,
                             b.EDOC_OFF_DATE,
                             b.EDOC_ON_DATE,
                             b.EDOC_EOFS_EOFS_ID
                         });

            var jsonResult = Json(query.ToDataSourceResult(request), JsonRequestBehavior.AllowGet);
            jsonResult.MaxJsonLength = int.MaxValue;
            return jsonResult;
            //return Json(query.ToDataSourceResult(request));
        }

        [EntityAuthorize("EXP_POST_LINE_INSTRU > select|EXP_TIPR_V > select|EXP_INSTRUMENT > select")]
        public ActionResult ReadInstru(int? postID)
        {
            //var instrument = (from h in Db.EXP_POST_LINE_INSTRU where (h.EPOL_EPOL_ID == postID /*|| h.EPOL_EPOL_ID_LINE == postID || h.EPOL_EPOL_ID_INSLIN == postID */) select new { h.EPIU_ID, h.CODE_DISP, h.CODE_NAME, h.PHAS_STAT, h.PHAS_TYPE, h.EINS_EINS_ID });

            var query = (from b in Db.EXP_TIPR_V//Context.EXP_EDOC_INSTRU
                         //join c in instrument on b.EPIU_EPIU_ID equals c.EPIU_ID
                         join d in Db.EXP_INSTRUMENT on b.INST_EINS_EINS_ID equals d.EINS_ID//c.EINS_EINS_ID equals d.EINS_ID
                         //where b.EPOL_EPOL_ID == postID
                         where b.EDOC_EPOL_EPOL_ID == postID && b.EDOC_ETBY_ETBY_ID == null
                         select new
                         {
                             d.EINS_ID,//!= null ? c.EINS_ID : b.BAY_ETBY_ID,
                             d.EINS_DESC //!= null ? c.EINS_DESC : b.BAY_ETBY_DESC
                         }).OrderBy(b => b.EINS_DESC).Distinct().ToList();

            return Json(query, JsonRequestBehavior.AllowGet);
        }

        [EntityAuthorize("EXP_EDOC_INSTRU > select|EXP_TYPE_BAY > select")]
        public ActionResult ReadBay(int? postID)
        {
            var query = (from b in Db.EXP_EDOC_INSTRU
                         join c in Db.EXP_TYPE_BAY on b.ETBY_ETBY_ID equals c.ETBY_ID
                         where b.EPOL_EPOL_ID == postID
                         select new
                         {
                             c.ETBY_ID,
                             c.ETBY_DESC
                         }).OrderBy(b => b.ETBY_DESC).Distinct().ToList();
            return Json(query, JsonRequestBehavior.AllowGet);
        }

        [EntityAuthorize("EXP_EDOC_INSTRU > select,insert,update")]
        public ActionResult UpdateProgramSelect(string OFF_DATE, string ON_DATE, string year, string organ, int? volt, int? post, int? inst, int? instdetail, int? bay, int? prog, int? func, int? trans)
        {
            var query = @"SELECT EDOC_EDIN_ID
                          FROM
                            EXP_TIPR_V
                          WHERE (EXPI_EEDO_YEAR   = :p__linq__0)
                          AND ((POST_ORGA_CODE     = :p__linq__1)
                          OR (:p__linq__2                     IS NULL))
                          AND ((POST_EUNL_EUNL_ID = :p__linq__3)
                          OR (:p__linq__4                     IS NULL))
                          AND ((POST_EPOL_ID       = :p__linq__5)
                          OR (:p__linq__6                     IS NULL))
                          AND (((INST_EINS_EINS_ID = :p__linq__7)
                          AND (BAY_ETBY_ID        IS NULL))
                          OR (:p__linq__8                     IS NULL))
                          AND ((BAY_ETBY_ID       = :p__linq__9)
                          OR (:p__linq__10                    IS NULL))
                          AND ((PROG_EPRO_ID       = :p__linq__11)
                          OR (:p__linq__12                    IS NULL))
                          AND ((FUNC_EFUN_ID       = :p__linq__13)
                          OR (:p__linq__14                    IS NULL))
                          AND ((EDOC_EPIU_EPIU_ID       = :p__linq__15)
                          OR (:p__linq__16                    IS NULL))
                          AND ((INST_EPIU_EPIU_ID_RT       = :p__linq__17)
                          OR (:p__linq__18                    IS NULL))";
            // var IdCollection = Request.Form["InstruID"];       
            //var ID = IdCollection.Split(',').AsEnumerable().Where(x => !String.IsNullOrEmpty(x)).ToList();
            //string startDT = Request.Form["OFF_DATE"];
            //string EndDT = Request.Form["ON_DATE"];
            string startDT = OFF_DATE;
            string EndDT = ON_DATE;
            int affectedRecords = 0;
            try
            {
                // if (ID.Any())
                // {
                // affectedRecords = Context.Database.ExecuteSqlCommand(string.Format("UPDATE EXP_EDOC_INSTRU SET OFF_DATE = '{0}' , ON_DATE = '{1}' WHERE EDIN_ID in ({2})", startDT.Trim(), EndDT.Trim(), string.Join(",", ID)));
                string upCommand = string.Format("UPDATE EXP_EDOC_INSTRU SET OFF_DATE = '{0}' , ON_DATE = '{1}' WHERE EDIN_ID in ({2})", startDT.Trim(), EndDT.Trim(), query);
                affectedRecords = Db.Database.ExecuteSqlCommand(upCommand, year, organ, organ, volt, volt, post, post, inst, inst, bay, bay, prog, prog, func, func, instdetail, instdetail, trans, trans);
                //}
                return new ServerMessages(ServerOprationType.Success) { Message = "زمانبندی شد", CoustomData = affectedRecords }.ToJson();
            }
            catch (Exception ex)
            {
                this.LogError(ex);
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = "خطلا در ثبت اطلاعات" }.ToJson();
            }
        }

        /*چهارمین   اکشنی که برای باز شدن فرم ارسال برنامه ها استفاده شده است  می باشد
         * براساس این ویو فرم اولیه ارسال برنامه ها و راه اندازی کارتابل سرویس و نگهداری است   */
        [MenuAuthorize]
        public ActionResult SendProgramTime()
        {
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            return View("SendProgramTime");
        }

        /* این اکشن قراردادهای سیستم را برمیگرداند  */
        public ActionResult GetContract()
        {
            var RetVal = from b in Db.CNT_CONTRACT select new { b.CNTR_NO, b.TITL };
            return Json(RetVal, JsonRequestBehavior.AllowGet);
        }

        /*سالهای که برای ایجاد برنامه زمانبندی ایجاد شده است */
        public ActionResult Getyeardoc()
        {
            var q = from b in Db.EXP_EDOC_INSTRU select b.EEDO_EEDO_ID;
            var RetVal = (from k in Db.EXP_EXPI_DOC
                          where k.ETDO_ETDO_ID == 101 && k.EEDO_YEAR != null
                              && q.Contains(k.EEDO_ID)
                          select new { k.EEDO_YEAR, k.EEDO_ID });

            return Json(RetVal, JsonRequestBehavior.AllowGet);
        }

        /*براساس سال که به این اکشن ارسال می شود تجهیزات برنامه زمانبندی ان سال را برمیگرداند*/
        public ActionResult Exp_TimeProg_Read([DataSourceRequest] DataSourceRequest request, int? EEDO_YEAR1)
        {
            string y = string.Empty;
            if (EEDO_YEAR1 != null)
            {
                y = EEDO_YEAR1.ToString();
            }

            var query = from k in Db.EXP_EXPI_DOC //.AsEnumerable()
                        join b in Db.EXP_EDOC_INSTRU //.AsEnumerable()
                        on k.EEDO_ID equals b.EEDO_EEDO_ID
                        join c in Db.EXP_POST_LINE_INSTRU //.AsEnumerable() 
                        on b.EPIU_EPIU_ID equals c.EPIU_ID
                        where k.EEDO_YEAR == y && k.ETDO_ETDO_ID == 101
                        select new
                        {
                            b.EDIN_ID,
                            b.EPOL_EPOL_ID,
                            b.ETBY_ETBY_ID,
                            b.EPIU_EPIU_ID,
                            //inst = instrument(b.EPIU_EPIU_ID), // این باید حذف بشه و دوتای پایینی جایگزینش بشن
                            inst = c.CODE_NAME,
                            c.PHAS_STAT,
                            b.EUNL_EUNL_ID,
                            b.EFUN_EFUN_ID,
                            b.OFF_DATE,
                            b.ON_DATE,
                            b.EOFS_EOFS_ID
                        };
            // select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.ETBY_ETBY_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };
            return Json(query.ToDataSourceResult(request));
        }

        public class yearSearchModelsend
        {
            public int EEDO_YEAR2 { get; set; }
            public int post { get; set; }
            public int line { get; set; }
            public int EINS_ID2 { get; set; }
            public int ETBY_ID2 { get; set; }
            public int EUNL_ID2 { get; set; }
            public int EOFS_ID2 { get; set; }
            public int EXP_PROGRAM1 { get; set; }
            public int efun { get; set; }
            public int linepost { get; set; }
            public string date1 { get; set; }
            public string date2 { get; set; }
        }

        public class sendvar
        {
            public string eedoid { get; set; }
            public string count { get; set; }
        }

        /*بعد این که رکوردی در کارتابل ایجاد شود فرم های کارتابلی سرویس و نگهداری مشخص می شود اکشنی که برای فرم های کارتابلی استفاده می شود*/
        public ActionResult ViewForm(string notId)
        {
            ViewBag.PostInstrument = Db.EXP_POST_LINE_INSTRU.Select(c => new { c.EPIU_ID, c.CODE_NAME });
            ViewBag.post = Db.EXP_POST_LINE.Select(c => new { c.EPOL_ID, c.EPOL_NAME });
            ViewBag.UniteV = Db.EXP_UNIT_LEVEL.Select(c => new { c.EUNL_ID, c.EUNL_DESC });
            ViewBag.PFUNCTION = Db.EXP_PFUNCTION.Select(c => new { c.EFUN_ID, c.EFUN_DESC });
            ViewBag.Offstat = Db.EXP_OFF_STAT.Select(c => new { c.EOFS_ID, c.EOFS_DESC });
            ViewBag.bay = Db.EXP_TYPE_BAY.Select(c => new { c.ETBY_ID, c.ETBY_DESC });
            EXP_EXPI_DOC cm = new EXP_EXPI_DOC();
            Session["notid"] = notId;
            return View("Sendprogram");
        }

        /*این اکشن براساس ردیف برنامه زمانبندی و تعداد بار تعریف برنامه زمانبندی برای ارسال به کارتابل ردیف های برنامه زمانبندی را برمی گرداند */
        public ActionResult Exp_sendTimeProg_Rsend([DataSourceRequest] DataSourceRequest request, sendvar y)
        {
            int id = 0; int c = 0;
            if (y.eedoid != null)
                id = Convert.ToInt32(y.eedoid.ToString());

            if (y.count != null)
                c = Convert.ToInt32(y.count.ToString());

            /* براساس ردیف برنامه و تعداد بار ایجاد در سال ردیف برنامه را مشخص و برمی گرداند */
            var query = from k in Db.EXP_EXPI_DOC
                        join b in Db.EXP_EDOC_INSTRU
                            on k.EEDO_ID equals b.EEDO_EEDO_ID
                        where b.EEDO_EEDO_ID == id && b.LENT_LINE == c
                        select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.ETBY_ETBY_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };

            return Json(query.ToDataSourceResult(request));
        }

        /*    در این اکشن براساس پارامتر های که به ان پاس داده می شود برنامه های که دارای تاریخ در ان بازده انتخاب شده اند را برمی گرداند */
        public ActionResult Exp_sendTimeProg_R([DataSourceRequest] DataSourceRequest request, yearSearchModelsend y)
        {
            /*پارامترهای که به این اکشن پاس داده شده است */
            string EEDO_YEAR2Param = y.EEDO_YEAR2.ToString();
            int postparam = y.post;
            int lineParam = y.line;
            int einsparam = y.EINS_ID2;
            int eunlparam = y.EUNL_ID2;
            int etbyparam = y.ETBY_ID2;
            int eofsparam = y.EOFS_ID2;
            int progparam = y.EXP_PROGRAM1;
            int efunparam = y.efun;
            int elinepost = y.linepost;
            string date1 = y.date1;
            string date2 = y.date2;

            if (postparam != 0)
            {/*پست مقدار داشته باشد */
                if (einsparam == 0)
                {/*نوع تجهیز مقدار داشته باشد */
                    if (elinepost == 0)
                    {/*خط پست مقدار داشته باشد */
                        var query = from k in Db.EXP_EXPI_DOC
                                    join b in Db.EXP_EDOC_INSTRU on k.EEDO_ID equals b.EEDO_EEDO_ID
                                    where (k.EEDO_YEAR == EEDO_YEAR2Param && k.EEDO_YEAR != null)
                                           && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                           && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                           && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                           && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                           && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                           && b.OFF_DATE.CompareTo(date1) >= 0 && b.OFF_DATE.CompareTo(date2) <= 0 && b.LENT_LINE == null
                                    select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.ETBY_ETBY_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };
                        return Json(query.ToDataSourceResult(request));
                    }
                    else
                    {
                        /*جستجو برای حالتی که خط ها مقدار داشته باشند*/
                        var q = from k in Db.EXP_POST_LINE_INSTRU
                                where k.EPOL_EPOL_ID_INSLIN != null && k.EPOL_EPOL_ID_LINE != null && k.EPOL_EPOL_ID == elinepost
                                select new { k.EPIU_ID };

                        elinepost = int.Parse(q.FirstOrDefault().EPIU_ID.ToString());

                        var query = from k in Db.EXP_EXPI_DOC
                                    join b in Db.EXP_EDOC_INSTRU on k.EEDO_ID equals b.EEDO_EEDO_ID
                                    where (k.EEDO_YEAR == EEDO_YEAR2Param && k.EEDO_YEAR != null)
                                           && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                           && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                           && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                           && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                           && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                             && (b.EPIU_EPIU_ID == elinepost || elinepost == 0)
                                                && b.OFF_DATE.CompareTo(date1) >= 0 && b.OFF_DATE.CompareTo(date2) <= 0 && b.LENT_LINE == null
                                    select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.ETBY_ETBY_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };
                        return Json(query.ToDataSourceResult(request));
                    }
                }
                else
                {
                    var q = (from h in Db.EXP_POST_LINE_INSTRU where h.EINS_EINS_ID == einsparam && h.EPOL_EPOL_ID == postparam select new { h.EPIU_ID });
                    /*جستجو براساس نوع تجهیز و پست */

                    var query = from k in Db.EXP_EXPI_DOC
                                join b in Db.EXP_EDOC_INSTRU
                                    on k.EEDO_ID equals b.EEDO_EEDO_ID
                                join f in q on b.EPIU_EPIU_ID equals f.EPIU_ID
                                where (k.EEDO_YEAR == EEDO_YEAR2Param || EEDO_YEAR2Param == null)
                                       && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                       && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                       && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                       && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                       && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                       && b.OFF_DATE.CompareTo(date1) >= 0 && b.OFF_DATE.CompareTo(date2) <= 0 && b.LENT_LINE == null
                                select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.ETBY_ETBY_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };

                    return Json(query.ToDataSourceResult(request));
                }
            }
            else
            {
                if (lineParam != 0)
                {
                    /*جستجو براساس خط ها */
                    var q = from k in Db.EXP_POST_LINE_INSTRU
                            where k.EPOL_EPOL_ID_INSLIN != null && k.EPOL_EPOL_ID_LINE != null && k.EPOL_EPOL_ID == lineParam
                            select new { k.EPIU_ID };
                    lineParam = int.Parse(q.FirstOrDefault().EPIU_ID.ToString());

                    var query = from k in Db.EXP_EXPI_DOC
                                join b in Db.EXP_EDOC_INSTRU on k.EEDO_ID equals b.EEDO_EEDO_ID
                                where (k.EEDO_YEAR == EEDO_YEAR2Param && k.EEDO_YEAR != null)
                                       && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                       && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                       && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                       && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                       && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                         && (b.EPIU_EPIU_ID == lineParam || lineParam == 0)
                                            && b.OFF_DATE.CompareTo(date1) >= 0 && b.OFF_DATE.CompareTo(date2) <= 0 && b.LENT_LINE == null
                                select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.ETBY_ETBY_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };

                    return Json(query.ToDataSourceResult(request));
                }
                else
                {
                    /*جستجو یراساس پست */
                    var query = from k in Db.EXP_EXPI_DOC
                                join b in Db.EXP_EDOC_INSTRU on k.EEDO_ID equals b.EEDO_EEDO_ID
                                where (k.EEDO_YEAR == EEDO_YEAR2Param || EEDO_YEAR2Param == null)
                                       && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                       && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                       && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                       && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                       && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                          && b.OFF_DATE.CompareTo(date1) >= 0 && b.OFF_DATE.CompareTo(date2) <= 0 && b.LENT_LINE == null
                                select new { b.LENT_LINE, b.EDIN_ID, b.EPOL_EPOL_ID, b.ETBY_ETBY_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };

                    return Json(query.ToDataSourceResult(request));
                }
            }
        }

        public class yearSearchModel
        {
            //   public string EEDO_YEAR1 { get; set; }
            public int EEDO_YEAR2 { get; set; }
            public string ORGA_CODE { get; set; }
            public int Unitvolt { get; set; }
            public int inst { get; set; }
            public int post { get; set; }
            public int line { get; set; }
            public int EINS_ID2 { get; set; }
            public int ETBY_ID2 { get; set; }
            public int EUNL_ID2 { get; set; }
            public int EOFS_ID2 { get; set; }
            public int EXP_PROGRAM1 { get; set; }
            public int efun { get; set; }
            public int linepost { get; set; }
        }

        private string instrument(decimal? i)
        {
            var q = (from b in Db.EXP_POST_LINE_INSTRU.AsEnumerable()
                     where b.EPIU_ID == i
                     select new { b.CODE_NAME, b.PHAS_STAT });

            string g = string.Empty;
            if (q.FirstOrDefault().PHAS_STAT != null)
            {
                if (q.FirstOrDefault().PHAS_STAT.ToString() == "0") g = q.FirstOrDefault().CODE_NAME + " فاز R";
                else
                    if (q.FirstOrDefault().PHAS_STAT.ToString() == "1") g = q.FirstOrDefault().CODE_NAME + "فاز S";
                    else if (q.FirstOrDefault().PHAS_STAT.ToString() == "2") g = q.FirstOrDefault().CODE_NAME + "فاز T";
                    else g = q.FirstOrDefault().CODE_NAME;
            }

            else g = q.FirstOrDefault().CODE_NAME;
            return g;
        }

        public ActionResult Exp_TimeProg_R([DataSourceRequest] DataSourceRequest request, yearSearchModel yearSearchModel1)
        {
            //string EEDO_YEAR1Param = yearSearchModel1.EEDO_YEAR1;
            string EEDO_YEAR2Param = yearSearchModel1.EEDO_YEAR2.ToString();
            string organi = yearSearchModel1.ORGA_CODE;
            int Unitvolt = yearSearchModel1.Unitvolt;
            int inst = yearSearchModel1.inst;
            int postparam = yearSearchModel1.post;
            int lineParam = yearSearchModel1.line;
            int einsparam = yearSearchModel1.EINS_ID2;
            int eunlparam = yearSearchModel1.EUNL_ID2;
            int etbyparam = yearSearchModel1.ETBY_ID2;
            int eofsparam = yearSearchModel1.EOFS_ID2;
            int progparam = yearSearchModel1.EXP_PROGRAM1;
            int efunparam = yearSearchModel1.efun;
            int elinepost = yearSearchModel1.linepost;

            if (postparam != 0)
            {
                if (einsparam == 0)
                {
                    if (elinepost == 0)
                    {
                        var query = from k in Db.EXP_EXPI_DOC //.AsEnumerable()
                                    join b in Db.EXP_EDOC_INSTRU //.AsEnumerable()
                                        on k.EEDO_ID equals b.EEDO_EEDO_ID
                                    join h in Db.EXP_POST_LINE_INSTRU
                                    on b.EPIU_EPIU_ID equals h.EPIU_ID
                                    where (k.EEDO_YEAR == EEDO_YEAR2Param && k.EEDO_YEAR != null)
                                           && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                           && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                           && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                           && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                           && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                    select new
                                    {
                                        b.EDIN_ID,
                                        b.EPOL_EPOL_ID,
                                        b.ETBY_ETBY_ID,
                                        b.EPIU_EPIU_ID,
                                        // inst = instrument(b.EPIU_EPIU_ID),
                                        inst = h.CODE_NAME,
                                        b.EUNL_EUNL_ID,
                                        b.EFUN_EFUN_ID,
                                        b.OFF_DATE,
                                        b.ON_DATE,
                                        b.EOFS_EOFS_ID
                                    };
                        return Json(query.ToDataSourceResult(request));
                    }
                    else
                    {
                        /*مثل خط و فرقی ندارد*/
                        var q = from k in Db.EXP_POST_LINE_INSTRU
                                where k.EPOL_EPOL_ID_INSLIN != null && k.EPOL_EPOL_ID_LINE != null && k.EPOL_EPOL_ID == elinepost
                                select new { k.EPIU_ID, k.CODE_NAME, k.CODE_DISP, k.PHAS_TYPE, k.PHAS_STAT };

                        elinepost = int.Parse(q.FirstOrDefault().EPIU_ID.ToString());

                        var query = from k in Db.EXP_EXPI_DOC //.AsEnumerable()
                                    join b in Db.EXP_EDOC_INSTRU //.AsEnumerable()
                                        on k.EEDO_ID equals b.EEDO_EEDO_ID
                                    join h in Db.EXP_POST_LINE_INSTRU
                                    on b.EPIU_EPIU_ID equals h.EPIU_ID
                                    where (k.EEDO_YEAR == EEDO_YEAR2Param && k.EEDO_YEAR != null)
                                           && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                           && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                           && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                           && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                           && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                             && (b.EPIU_EPIU_ID == elinepost || elinepost == 0)
                                    select new
                                    {
                                        b.EDIN_ID,
                                        b.EPOL_EPOL_ID,
                                        b.ETBY_ETBY_ID,
                                        b.EPIU_EPIU_ID,
                                        //   inst = instrument(b.EPIU_EPIU_ID),
                                        inst = h.CODE_NAME,
                                        b.EUNL_EUNL_ID,
                                        b.EFUN_EFUN_ID,
                                        b.OFF_DATE,
                                        b.ON_DATE,
                                        b.EOFS_EOFS_ID
                                    };
                        return Json(query.ToDataSourceResult(request));
                    }
                }
                else
                {
                    var q = (from h in Db.EXP_POST_LINE_INSTRU where h.EINS_EINS_ID == einsparam && h.EPOL_EPOL_ID == postparam select new { h.EPIU_ID, h.CODE_DISP, h.CODE_NAME, h.PHAS_STAT, h.PHAS_TYPE });

                    if (inst != 0 && inst != null)
                    {
                        q = (from h in Db.EXP_POST_LINE_INSTRU where h.EPIU_ID == inst && h.EINS_EINS_ID == einsparam && h.EPOL_EPOL_ID == postparam select new { h.EPIU_ID, h.CODE_DISP, h.CODE_NAME, h.PHAS_STAT, h.PHAS_TYPE });
                    }

                    var query = from k in Db.EXP_EXPI_DOC //.AsEnumerable()
                                join b in Db.EXP_EDOC_INSTRU //.AsEnumerable()
                                    on k.EEDO_ID equals b.EEDO_EEDO_ID
                                join f in q on b.EPIU_EPIU_ID equals f.EPIU_ID
                                where (k.EEDO_YEAR == EEDO_YEAR2Param || EEDO_YEAR2Param == null)
                                       && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                       && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                    // && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                       && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                       && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                select new
                                {
                                    b.EDIN_ID,
                                    b.EPOL_EPOL_ID,
                                    b.ETBY_ETBY_ID,
                                    b.EPIU_EPIU_ID,
                                    //inst = instrument(b.EPIU_EPIU_ID),
                                    inst = f.CODE_NAME,
                                    b.EUNL_EUNL_ID,
                                    b.EFUN_EFUN_ID,
                                    b.OFF_DATE,
                                    b.ON_DATE,
                                    b.EOFS_EOFS_ID
                                };

                    return Json(query.ToDataSourceResult(request));
                }
            }
            else
            {
                if (lineParam != 0)
                {
                    var q = from k in Db.EXP_POST_LINE_INSTRU
                            where k.EPOL_EPOL_ID_INSLIN != null && k.EPOL_EPOL_ID_LINE != null && k.EPOL_EPOL_ID == lineParam
                            select new { k.EPIU_ID, k.CODE_NAME, k.CODE_DISP, k.PHAS_STAT, k.PHAS_TYPE };

                    lineParam = int.Parse(q.FirstOrDefault().EPIU_ID.ToString());

                    var query = from k in Db.EXP_EXPI_DOC //. /AsEnumerable()
                                join b in Db.EXP_EDOC_INSTRU //.AsEnumerable()
                                    on k.EEDO_ID equals b.EEDO_EEDO_ID
                                join h in Db.EXP_POST_LINE_INSTRU
                                on b.EPIU_EPIU_ID equals h.EPIU_ID
                                where (k.EEDO_YEAR == EEDO_YEAR2Param && k.EEDO_YEAR != null)
                                       && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                       && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                       && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                       && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                       && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                         && (b.EPIU_EPIU_ID == lineParam || lineParam == 0)
                                select new
                                {
                                    b.EDIN_ID,
                                    b.EPOL_EPOL_ID,
                                    b.ETBY_ETBY_ID,
                                    b.EPIU_EPIU_ID,
                                    //   inst = instrument(b.EPIU_EPIU_ID),
                                    inst = h.CODE_NAME,
                                    b.EUNL_EUNL_ID,
                                    b.EFUN_EFUN_ID,
                                    b.OFF_DATE,
                                    b.ON_DATE,
                                    b.EOFS_EOFS_ID
                                };

                    return Json(query.ToDataSourceResult(request));
                }
                else
                {
                    if (organi != null && organi != "0")
                    {
                        if (Unitvolt != 0 && Unitvolt != null)
                        {
                            var query = from k in Db.EXP_EXPI_DOC //.AsEnumerable() 
                                        join b in Db.EXP_EDOC_INSTRU //.AsEnumerable() 
                                        on k.EEDO_ID equals b.EEDO_EEDO_ID
                                        join h in Db.EXP_POST_LINE //.AsEnumerable()
                                        on b.EPOL_EPOL_ID equals h.EPOL_ID
                                        join d in Db.EXP_POST_LINE_INSTRU
                                        on b.EPIU_EPIU_ID equals d.EPIU_ID
                                        where (k.EEDO_YEAR == EEDO_YEAR2Param || EEDO_YEAR2Param == null)
                                               && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                               && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                               && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                               && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                               && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                               && h.ORGA_CODE == organi && h.EUNL_EUNL_ID == Unitvolt
                                        select new
                                        {
                                            b.EDIN_ID,
                                            b.EPOL_EPOL_ID,
                                            b.ETBY_ETBY_ID,
                                            b.EPIU_EPIU_ID,
                                            //  inst = instrument(b.EPIU_EPIU_ID),
                                            inst = d.CODE_NAME,
                                            b.EUNL_EUNL_ID,
                                            b.EFUN_EFUN_ID,
                                            b.OFF_DATE,
                                            b.ON_DATE,
                                            b.EOFS_EOFS_ID
                                        };

                            return Json(query.ToDataSourceResult(request));
                        }
                        else
                        {
                            var query = from k in Db.EXP_EXPI_DOC //.AsEnumerable() 
                                        join b in Db.EXP_EDOC_INSTRU //.AsEnumerable()
                                         on k.EEDO_ID equals b.EEDO_EEDO_ID
                                        join h in Db.EXP_POST_LINE //.AsEnumerable() 
                                         on b.EPOL_EPOL_ID equals h.EPOL_ID
                                        join d in Db.EXP_POST_LINE_INSTRU
                                        on b.EPIU_EPIU_ID equals d.EPIU_ID
                                        where (k.EEDO_YEAR == EEDO_YEAR2Param || EEDO_YEAR2Param == null)
                                               && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                               && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                               && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                               && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                               && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                               && h.ORGA_CODE == organi
                                        select new
                                        {
                                            b.EDIN_ID,
                                            b.EPOL_EPOL_ID,
                                            b.ETBY_ETBY_ID,
                                            b.EPIU_EPIU_ID,
                                            // inst = instrument(b.EPIU_EPIU_ID),
                                            inst = d.CODE_NAME,
                                            b.EUNL_EUNL_ID,
                                            b.EFUN_EFUN_ID,
                                            b.OFF_DATE,
                                            b.ON_DATE,
                                            b.EOFS_EOFS_ID
                                        };

                            return Json(query.ToDataSourceResult(request));
                        }
                    }
                    else
                    {
                        var query = from k in Db.EXP_EXPI_DOC //.AsEnumerable()
                                    join b in Db.EXP_EDOC_INSTRU //.AsEnumerable()
                                        on k.EEDO_ID equals b.EEDO_EEDO_ID
                                    join c in Db.EXP_POST_LINE_INSTRU
                                    on b.EPIU_EPIU_ID equals c.EPIU_ID
                                    where (k.EEDO_YEAR == EEDO_YEAR2Param || EEDO_YEAR2Param == null)
                                           && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                           && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                           && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                           && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                           && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                    select new
                                    {
                                        b.EDIN_ID,
                                        b.EPOL_EPOL_ID,
                                        b.ETBY_ETBY_ID,
                                        b.EPIU_EPIU_ID,
                                        // inst = instrument(b.EPIU_EPIU_ID),
                                        inst = c.CODE_NAME,
                                        b.EUNL_EUNL_ID,
                                        b.EFUN_EFUN_ID,
                                        b.OFF_DATE,
                                        b.ON_DATE,
                                        b.EOFS_EOFS_ID
                                    };

                        return Json(query.ToDataSourceResult(request));
                    }
                }
            }
        }


        /*   
اکشنی که در این اسکریپ صدا زده می شود ایتم های که انتخاب شده اند را مشخص کرده 
         * و سپس برای ارسال به مرحله بعد تعیین می نماید  
         * و همچنین در کارتابل ردیفی را برای این دسته برنامه ایجاد می نماید 
*/
        public JsonResult confirmsendprog(string EEDO_YEAR2, string post, string line, string EINS_ID2, string ETBY_ID2, string EUNL_ID2, string EOFS_ID2,
                                          string EXP_PROGRAM1, string efun, string linepost, string date1, string date2)
        {

            //  string EEDO_YEAR1Param = yearSearchModel1.EEDO_YEAR1;
            string EEDO_YEAR2Param = EEDO_YEAR2.ToString();
            int postparam = 0;
            if (post != "")
                postparam = Convert.ToInt32(post);

            int lineParam = 0;
            if (line != "")
                lineParam = Convert.ToInt32(line);

            int einsparam = 0;
            if (EINS_ID2 != "")
                einsparam = Convert.ToInt32(EINS_ID2);

            int eunlparam = 0;
            if (EUNL_ID2 != "")
                eunlparam = Convert.ToInt32(EUNL_ID2);

            int etbyparam = 0;
            if (ETBY_ID2 != "")
                etbyparam = Convert.ToInt32(ETBY_ID2);

            int eofsparam = 0;
            if (EOFS_ID2 != "")
                eofsparam = Convert.ToInt32(EOFS_ID2);

            int progparam = 0;
            if (EXP_PROGRAM1 != "")
                progparam = Convert.ToInt32(EXP_PROGRAM1);

            int efunparam = 0;
            if (efun != "")
                efunparam = Convert.ToInt32(efun);

            int elinepost = 0;
            if (linepost != "")
                elinepost = Convert.ToInt32(linepost);

            /*بدست اوردن ردیف های مد نظر کاربر که این قسمت با اکشن Exp_sendTimeProg_R یکسان است  */
            var query = from k in Db.EXP_EDOC_INSTRU select k;

            if (postparam != 0)
            {
                if (einsparam == 0)
                {
                    if (elinepost == 0)
                    {
                        query = from k in Db.EXP_EXPI_DOC
                                join b in Db.EXP_EDOC_INSTRU
                                    on k.EEDO_ID equals b.EEDO_EEDO_ID
                                where (k.EEDO_YEAR == EEDO_YEAR2Param && k.EEDO_YEAR != null)
                                       && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                       && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                       && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                       && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                       && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                       && b.OFF_DATE.CompareTo(date1) >= 0 && b.OFF_DATE.CompareTo(date2) <= 0 /*&& b.LENT_LINE==null*/
                                select b;
                    }
                    else
                    {
                        /*مثل خط و فرقی ندارد*/
                        var q = from k in Db.EXP_POST_LINE_INSTRU
                                where k.EPOL_EPOL_ID_INSLIN != null && k.EPOL_EPOL_ID_LINE != null && k.EPOL_EPOL_ID == elinepost
                                select new { k.EPIU_ID };

                        elinepost = int.Parse(q.FirstOrDefault().EPIU_ID.ToString());

                        query = from k in Db.EXP_EXPI_DOC
                                join b in Db.EXP_EDOC_INSTRU
                                    on k.EEDO_ID equals b.EEDO_EEDO_ID
                                where (k.EEDO_YEAR == EEDO_YEAR2Param && k.EEDO_YEAR != null)
                                       && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                       && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                       && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                       && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                       && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                         && (b.EPIU_EPIU_ID == elinepost || elinepost == 0)
                                            && b.OFF_DATE.CompareTo(date1) >= 0 && b.OFF_DATE.CompareTo(date2) <= 0/*&& b.LENT_LINE==null*/
                                select b;
                    }
                }
                else
                {
                    var q = (from h in Db.EXP_POST_LINE_INSTRU where h.EINS_EINS_ID == einsparam && h.EPOL_EPOL_ID == postparam select new { h.EPIU_ID });
                    query = from k in Db.EXP_EXPI_DOC
                            join b in Db.EXP_EDOC_INSTRU
                                on k.EEDO_ID equals b.EEDO_EEDO_ID
                            join f in q on b.EPIU_EPIU_ID equals f.EPIU_ID
                            where (k.EEDO_YEAR == EEDO_YEAR2Param || EEDO_YEAR2Param == null)
                                   && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                   && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                   && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                   && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                   && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                   && b.OFF_DATE.CompareTo(date1) >= 0 && b.OFF_DATE.CompareTo(date2) <= 0 /*&& b.LENT_LINE==null*/
                            select b;
                }
            }
            else
            {
                if (lineParam != 0)
                {
                    var q = from k in Db.EXP_POST_LINE_INSTRU
                            where k.EPOL_EPOL_ID_INSLIN != null && k.EPOL_EPOL_ID_LINE != null && k.EPOL_EPOL_ID == lineParam
                            select new { k.EPIU_ID };

                    lineParam = int.Parse(q.FirstOrDefault().EPIU_ID.ToString());
                    query = from k in Db.EXP_EXPI_DOC
                            join b in Db.EXP_EDOC_INSTRU
                                on k.EEDO_ID equals b.EEDO_EEDO_ID
                            where (k.EEDO_YEAR == EEDO_YEAR2Param && k.EEDO_YEAR != null)
                                   && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                   && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                   && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                   && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                   && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                     && (b.EPIU_EPIU_ID == lineParam || lineParam == 0)
                                        && b.OFF_DATE.CompareTo(date1) >= 0 && b.OFF_DATE.CompareTo(date2) <= 0 /*&& b.LENT_LINE==null*/
                            select b;
                }
                else
                {
                    query = from k in Db.EXP_EXPI_DOC
                            join b in Db.EXP_EDOC_INSTRU on k.EEDO_ID equals b.EEDO_EEDO_ID
                            where (k.EEDO_YEAR == EEDO_YEAR2Param || EEDO_YEAR2Param == null)
                                   && (b.EPOL_EPOL_ID == postparam || postparam == 0)
                                   && (b.EUNL_EUNL_ID == eunlparam || eunlparam == 0)
                                   && (b.ETBY_ETBY_ID == etbyparam || etbyparam == 0)
                                   && (b.EOFS_EOFS_ID == eofsparam || eofsparam == 0)
                                   && (b.EFUN_EFUN_ID == efunparam || efunparam == 0)
                                      && b.OFF_DATE.CompareTo(date1) >= 0 && b.OFF_DATE.CompareTo(date2) <= 0 /*&& b.LENT_LINE==null*/
                            select b;
                }
            }

            /*بعد از بدست اوردن ردیف ها تعداد باری که در ان سال ارسال اطلاعات شده را بدست می اوریم */
            int ideedo = Convert.ToInt32(query.FirstOrDefault().EEDO_EEDO_ID.ToString());
            int counrow = 0;
            var qexp = (from k in Db.EXP_EDOC_INSTRU where k.LENT_LINE != null && k.EEDO_EEDO_ID == ideedo select k.LENT_LINE);
            if (qexp.FirstOrDefault() == null)
                counrow = 1;
            else
                counrow = Convert.ToInt32(qexp.Max().ToString()); counrow = counrow + 1;

            /*بروی رکوردها هم ردیف وظیفه ای که ان را تعیین کردعه و شماره تعداد بار ارسال اطلاعات ثبت می وشد */
            foreach (var qupdate in query)
            {
                qupdate.JDTY_JDTY_ID = 140;/*ثبت وظیفه بروی رکوردها*/
                qupdate.LENT_LINE = counrow;/*ثبت تعداد بار ارسال */
            }

            Db.SaveChanges();
            string doc_name = "برنامه زمانبندی از تاریخ" + date1 + " تا تاریخ  " + date2;
            string bodymessage = "برنامه زمانبندی از تاریخ" + date1 + " تا تاریخ  " + date2 + " به شماره " + counrow + " سال " + EEDO_YEAR2Param;
            /*ایجاد برنامه در کارتابل کاربر  */
            AsrWorkFlowProcess wp = new AsrWorkFlowProcess();
            wp.StartProcess(this.HttpContext.User.Identity.Name, new string[] { this.HttpContext.User.Identity.Name }, doc_name, bodymessage, 101, ideedo + "-" + counrow);
            int not_id = wp.NoteId;
            /*پیغام به کاربر*/
            return new ServerMessages(ServerOprationType.Success) { Message = string.Format("[{0}] ارسال شد.", 1), CoustomData = not_id }.ToJson();
        }

        /*ردیف های برنامه زمانبندی با این اکشن ثبت یا تغییر می نماینند */
        public ActionResult Add_expi_docinsert(Equipment.Models.EXP_EDOC_INSTRU NewItem)
        {
            //int u = Convert.ToInt32(Session["progb_n_id"]);
            int u = Convert.ToInt32(Request.Form["edinId"]);
            int f = Convert.ToInt32(NewItem.EDIN_ID);

            try
            {
                string offdate1 = Request.Form["OFF_DATE1"].ToString();
                string ondate1 = Request.Form["ON_DATE1"].ToString();
                if (offdate1.CompareTo(ondate1) > 0)
                {
                    return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = string.Format("[{0}]تاریخ شروع از تاریخ پایان بزرکتر نمی تواند باشد.", 1) }.ToJson();
                }
                else
                {
                    if (u == 0)
                    {
                        /*در صورتیکه ردیف جدید است یک رکورد جدید برای برنامه زمانبندی ایجاد می شود */
                        NewItem.EEDO_EEDO_ID = Convert.ToInt32(Session["progbid"]);
                        Db.EXP_EDOC_INSTRU.Add(NewItem);
                        Db.SaveChanges();
                        return new ServerMessages(ServerOprationType.Success) { Message = string.Format("[{0}] ثبت شد.", NewItem.EPOL_EPOL_ID), CoustomData = 1 }.ToJson();
                    }
                    else
                    {
                        /*ردیف مشخص شده با مقدارهای تاریخ جدید ویرایش می شود */
                        var row = (from b in Db.EXP_EDOC_INSTRU where b.EDIN_ID == u select b).FirstOrDefault();
                        row.OFF_DATE = Request.Form["OFF_DATE1"].ToString();
                        row.ON_DATE = Request.Form["ON_DATE1"].ToString();
                        Db.SaveChanges();
                        return new ServerMessages(ServerOprationType.Success) { Message = "بروز رسانی شد." }.ToJson();
                    }
                }
            }
            catch (Exception ex)
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = ex.PersianMessage() }.ToJson();
            }
        }

        /*این اکشن براساس اطلاعاتی که کاربر ورود اطلاعات کرده است برنامه زمانبندی را پیدا کرده و بروی انها تاریخ شروع و پایان را ثبت می نماید*/
        public ActionResult Add_expi_docupdate(EXP_EXPI_DOC MyModel)
        {
            string f1 = string.Empty;
            if (Request.Form["yearprog"] != null)
            {
                f1 = Request.Form["yearprog"].ToString();

                if (Request.Form["yearprog"].ToString() == "")
                {
                    return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = "  سال را انتخاب نمایید" }.ToJson();
                }
            }

            AsrWorkFlowProcess wp = new AsrWorkFlowProcess();

            /*چک وجود انتخاب سال*/
            /*چک داشتن تاریخ شروع و پایان */
            if (Request.Form["OFF_DATE"] != null && Request.Form["OFF_DATE"] != null)
            {
                if (Request.Form["OFF_DATE"].ToString() == "" || Request.Form["ON_DATE"].ToString() == "")
                {
                    return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = " تاریخ مورد نظر را وارد نمایید " }.ToJson();
                }
                else
                {
                    int p2 = 0;
                    int p4 = 0;
                    int p6 = 0;
                    int p8 = 0;
                    int p3 = 0;
                    int p5 = 0;
                    int p7 = 0;
                    decimal? inst = 0;
                    /*پیدا کردن مقادیری که کاربر انتخاب کرده است */
                    if (Request.Form["post3"] != null && Request.Form["post3"] != "")
                    {
                        var postParam = Request.Form["post3"].ToString();
                        //   var lineParam = Request.Form["line3"].ToString();
                        if (Request.Form["post3"].ToString() != "" && Request.Form["post3"].ToString() != "")
                        {
                            if (postParam != "") p6 = int.Parse(postParam);
                        }
                    }

                    if (Request.Form["eins"] != null && Request.Form["eins"] != "")
                    {
                        var eins = Request.Form["eins"].ToString();
                        if (eins != "") p5 = int.Parse(eins);
                    }

                    if (Request.Form["etby"] != null && Request.Form["etby"] != "")
                    {
                        var etby = Request.Form["etby"].ToString();
                        if (etby != "") p3 = int.Parse(etby);
                    }

                    if (Request.Form["linepost"] != null && Request.Form["linepost"] != "")
                    {
                        var postlineParam = Request.Form["etby"].ToString();
                        if (postlineParam != "") p7 = int.Parse(postlineParam);
                    }

                    if (Request.Form["POSTINST"] != null && Request.Form["POSTINST"] != "")
                    {
                        inst = Convert.ToInt32(Request.Form["POSTINST"].ToString());
                    }

                    string eunl = string.Empty;
                    if (Request.Form["eunl"] != null && Request.Form["eunl"] != "")
                    {
                        eunl = Request.Form["eunl"].ToString();
                    }

                    string eofs = string.Empty;
                    if (Request.Form["eofs"] != null && Request.Form["eofs"] != "")
                    {
                        eofs = Request.Form["eofs"].ToString();
                    }

                    string prog = string.Empty;
                    if (Request.Form["prog"] != null && Request.Form["prog"] != "")
                    {
                        prog = Request.Form["prog"].ToString();
                    }

                    int p1 = 0;
                    if (Request.Form["prog"] != null && Request.Form["prog"] != "")
                    {
                        var efun = Request.Form["efun"].ToString();
                        if (efun != "")
                            p1 = int.Parse(efun);

                    }

                    if (eofs != "") p2 = int.Parse(eofs);/*وضعیت قطع را انتخاب کرده است */
                    if (eunl != "") p4 = int.Parse(eunl);/*عملیات کاری را انتخاب کرده است */

                    /*پست را انتخاب کرده است*/
                    //if (lineParam != "") p8 = int.Parse(lineParam);/*خط را انتخاب کرده است */

                    string offdateParam = Request.Form["OFF_DATE"];
                    string ondateParam = Request.Form["ON_DATE"];
                    try
                    {
                        if (p6 != 0)
                        {/*پست را انتخاب کرده است */
                            if (p3 != 0)
                            {/*بی را انتخاب کرده است */
                                var query = from k in Db.EXP_EXPI_DOC
                                            join b in Db.EXP_EDOC_INSTRU
                                                on k.EEDO_ID equals b.EEDO_EEDO_ID
                                            where (k.EEDO_YEAR == f1) && (b.EFUN_EFUN_ID == p1 || p1 == 0)
                                                   && (b.EPOL_EPOL_ID == p6 || p6 == 0)
                                                   && (b.EUNL_EUNL_ID == p4 || p4 == 0)
                                                   && (b.ETBY_ETBY_ID == p3 || p3 == 0)
                                                   && (b.EOFS_EOFS_ID == p2 || p2 == 0)
                                            select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };

                                /*پیدا کردن ردیف های برنامه زمانبندی براساس ایتم های انتخاب شده */
                                foreach (var item in query)
                                {
                                    var chkl = (from b in Db.EXP_EDOC_INSTRU where b.EDIN_ID == item.EDIN_ID select b).FirstOrDefault();
                                    chkl.OFF_DATE = offdateParam;
                                    chkl.ON_DATE = ondateParam;
                                    Db.SaveChanges();
                                    /*ثبت تاریخ ها بروی ردیف های برنامه زمانبندی */
                                }

                                return new ServerMessages(ServerOprationType.Success) { Message = string.Format("[{0}] ثبت شد.", p3) }.ToJson();
                            }

                            if (p7 != 0)
                            {
                                /*در صورتیکه خط را انتخاب کرده است */
                                var q = from k in Db.EXP_POST_LINE_INSTRU
                                        where k.EPOL_EPOL_ID_INSLIN != null && k.EPOL_EPOL_ID_LINE != null && k.EPOL_EPOL_ID == p7
                                        select new { k.EPIU_ID };
                                int lpostParam = int.Parse(q.FirstOrDefault().EPIU_ID.ToString());
                                /*بدست اوردن خط */

                                var query = from k in Db.EXP_EXPI_DOC
                                            join b in Db.EXP_EDOC_INSTRU
                                                on k.EEDO_ID equals b.EEDO_EEDO_ID
                                            where (k.EEDO_YEAR == f1)
                                                   && (b.EFUN_EFUN_ID == p1 || p1 == 0)
                                                   && (b.EPOL_EPOL_ID == p6 || p6 == 0)
                                                   && (b.EUNL_EUNL_ID == p4 || p4 == 0)
                                                   && (b.ETBY_ETBY_ID == p3 || p3 == 0)
                                                   && (b.EOFS_EOFS_ID == p2 || p2 == 0)
                                                   && b.EPIU_EPIU_ID == lpostParam
                                            select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };

                                foreach (var item in query)
                                {
                                    var chkl = (from b in Db.EXP_EDOC_INSTRU where b.EDIN_ID == item.EDIN_ID select b).FirstOrDefault();
                                    chkl.OFF_DATE = offdateParam;
                                    chkl.ON_DATE = ondateParam;
                                    Db.SaveChanges();
                                }

                                return new ServerMessages(ServerOprationType.Success) { Message = string.Format("[{0}] ثبت شد.", p7) }.ToJson();
                            }
                            if (p5 != 0)
                            {
                                /*بدست اوردن اطلذاعات براساس نوع تجهیز */
                                var query = from k in Db.EXP_EXPI_DOC
                                            join b in Db.EXP_EDOC_INSTRU
                                                on k.EEDO_ID equals b.EEDO_EEDO_ID
                                            join h in Db.EXP_POST_LINE_INSTRU on b.EPIU_EPIU_ID equals h.EPIU_ID
                                            where (k.EEDO_YEAR == f1) && h.EINS_EINS_ID == p5 && h.EPOL_EPOL_ID == p6
                                                   && (b.EFUN_EFUN_ID == p1 || p1 == 0)
                                                   && (b.EPOL_EPOL_ID == p6 || p6 == 0)
                                                   && (b.EUNL_EUNL_ID == p4 || p4 == 0)
                                                   && (b.ETBY_ETBY_ID == p3 || p3 == 0)
                                                   && (b.EOFS_EOFS_ID == p2 || p2 == 0)
                                                   && (b.EPIU_EPIU_ID == inst || inst == 0)
                                            // && q.Contains(h.EPIU_ID)
                                            select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };

                                foreach (var item in query)
                                {
                                    var chkl = (from b in Db.EXP_EDOC_INSTRU where b.EDIN_ID == item.EDIN_ID select b).FirstOrDefault();
                                    chkl.OFF_DATE = offdateParam;
                                    chkl.ON_DATE = ondateParam;
                                    Db.SaveChanges();
                                }

                                return new ServerMessages(ServerOprationType.Success) { Message = string.Format("[{0}] ثبت شد.", p5) }.ToJson();
                            }
                            if (p6 != 0)
                            {/*براساس پست انتخابی */
                                var query = from k in Db.EXP_EXPI_DOC
                                            join b in Db.EXP_EDOC_INSTRU
                                                on k.EEDO_ID equals b.EEDO_EEDO_ID
                                            where (k.EEDO_YEAR == f1) && (b.EFUN_EFUN_ID == p1 || p1 == 0)
                                                   && (b.EPOL_EPOL_ID == p6 || p6 == 0)
                                                   && (b.EUNL_EUNL_ID == p4 || p4 == 0)
                                                   && (b.ETBY_ETBY_ID == p3 || p3 == 0)
                                                   && (b.EOFS_EOFS_ID == p2 || p2 == 0)
                                            select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };

                                foreach (var item in query)
                                {
                                    var chkl = (from b in Db.EXP_EDOC_INSTRU where b.EDIN_ID == item.EDIN_ID select b).FirstOrDefault();
                                    chkl.OFF_DATE = offdateParam;
                                    chkl.ON_DATE = ondateParam;
                                    Db.SaveChanges();
                                }

                                return new ServerMessages(ServerOprationType.Success) { Message = string.Format("[{0}] ثبت شد.", p3) }.ToJson();
                            }

                            return new ServerMessages(ServerOprationType.Success) { Message = string.Format("[{0}] ثبت شد.", p3) }.ToJson();
                        }

                        if (p8 != 0)
                        {/*براساس خط انتخابی */
                            var q = from k in Db.EXP_POST_LINE_INSTRU
                                    where k.EPOL_EPOL_ID_INSLIN != null && k.EPOL_EPOL_ID_LINE != null && k.EPOL_EPOL_ID == p8
                                    select new { k.EPIU_ID };

                            int lpostParam = int.Parse(q.FirstOrDefault().EPIU_ID.ToString());

                            var query = from k in Db.EXP_EXPI_DOC
                                        join b in Db.EXP_EDOC_INSTRU
                                            on k.EEDO_ID equals b.EEDO_EEDO_ID
                                        where (k.EEDO_YEAR == f1)
                                               && (b.EFUN_EFUN_ID == p1 || p1 == 0)
                                               && (b.EPOL_EPOL_ID == p6 || p6 == 0)
                                               && (b.EUNL_EUNL_ID == p4 || p4 == 0)
                                               && (b.ETBY_ETBY_ID == p3 || p3 == 0)
                                               && (b.EOFS_EOFS_ID == p2 || p2 == 0)
                                               && b.EPIU_EPIU_ID == lpostParam
                                        select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };

                            foreach (var item in query)
                            {
                                var chkl = (from b in Db.EXP_EDOC_INSTRU where b.EDIN_ID == item.EDIN_ID select b).FirstOrDefault();
                                chkl.OFF_DATE = offdateParam;
                                chkl.ON_DATE = ondateParam;
                                Db.SaveChanges();
                            }

                            return new ServerMessages(ServerOprationType.Success) { Message = string.Format("[{0}] ثبت شد.", p8) }.ToJson();
                        }

                        if (f1 != "")
                        {
                            /*براساس سال */
                            var query = from k in Db.EXP_EXPI_DOC
                                        join b in Db.EXP_EDOC_INSTRU
                                            on k.EEDO_ID equals b.EEDO_EEDO_ID
                                        where (k.EEDO_YEAR == f1)
                                               && (b.EFUN_EFUN_ID == p1 || p1 == 0)
                                               && (b.EPOL_EPOL_ID == p6 || p6 == 0)
                                               && (b.EUNL_EUNL_ID == p4 || p4 == 0)
                                               && (b.ETBY_ETBY_ID == p3 || p3 == 0)
                                               && (b.EOFS_EOFS_ID == p2 || p2 == 0)
                                        select new { b.EDIN_ID, b.EPOL_EPOL_ID, b.EPIU_EPIU_ID, b.EUNL_EUNL_ID, b.EFUN_EFUN_ID, b.OFF_DATE, b.ON_DATE, b.EOFS_EOFS_ID };

                            foreach (var item in query)
                            {
                                var chkl = (from b in Db.EXP_EDOC_INSTRU where b.EDIN_ID == item.EDIN_ID select b).FirstOrDefault();
                                chkl.OFF_DATE = offdateParam;
                                chkl.ON_DATE = ondateParam;
                                Db.SaveChanges();
                            }

                            return new ServerMessages(ServerOprationType.Success) { Message = string.Format("[{0}] ثبت شد.", f1) }.ToJson();
                        }

                        return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = " ثبت نشد  " }.ToJson();
                    }
                    catch (Exception ex)
                    {
                        return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = ex.PersianMessage() }.ToJson();
                    }
                }
            }
            else
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = " تاریخ مورد نظر را وارد نمایید " }.ToJson();
            }
        }

        /*این اکشن برای ثبت و ایجاد تجهیزات کل شبکه که در پست ها وجود دارند براساس تعریف برنامه های تعریف شده است */
        public ActionResult Add_expi_docyear(EXP_EXPI_DOC MyModel)
        {
            var d = Request.Form["year1111"].ToString();
            if (string.IsNullOrEmpty(d))
            {
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = "لطفا ابتدا سال ایجاد برنامه را وارد کنید" }.ToJson();
            }

            var querycheck = (from k in Db.EXP_EXPI_DOC
                              join b in Db.EXP_EDOC_INSTRU
                                  on k.EEDO_ID equals b.EEDO_EEDO_ID
                              where (k.EEDO_YEAR == d)
                              select new { b.EDIN_ID }).Count();

            var querycheck1 = (from k in Db.EXP_EXPI_DOC
                               where (k.EEDO_YEAR == d)
                               select new { k.EEDO_ID }).Count();

            /*چک ایا در این سال برنامه زمانبندی ایجاد شده است */

            try
            {
                int iddoc = 0;
                if (querycheck1 == 0)
                {
                    if (querycheck == 0)
                    {
                        MyModel.ACTI_NACT = "1";
                        MyModel.ETDO_ETDO_ID = 101;
                        MyModel.EEDO_YEAR = d;
                        //var querymax = from b in Db.EXP_EXPI_DOC where b.ETDO_ETDO_ID == 101 select b;
                        //string max = querymax.Max(c => c.DOC_NUMB);
                        //MyModel.DOC_NUMB = (Convert.ToInt32(max) + 1).ToString();
                        MyModel.DOC_NUMB = "Y" + d;

                        Db.EXP_EXPI_DOC.Add(MyModel);
                        Db.SaveChanges();
                        iddoc = int.Parse(MyModel.EEDO_ID.ToString());
                        /*ایجاد سال برنامه زمانبندی و بدست اوردن ردیف رکوردان برای ثبت اطلاعات تجهیزات برنامه ها */
                    }
                    else
                    {
                        string a = (from k in Db.EXP_EXPI_DOC
                                    join b in Db.EXP_EDOC_INSTRU
                                        on k.EEDO_ID equals b.EEDO_EEDO_ID
                                    where k.EEDO_YEAR == d
                                    select k.EEDO_ID).FirstOrDefault().ToString();

                        iddoc = int.Parse(a);
                        /*بدست اوردن ردیف سال زمانبندی در صورتیکه وجود داشته باشد */
                    }
                }
                else
                {
                    string a = (from k in Db.EXP_EXPI_DOC
                                where k.EEDO_YEAR == d
                                select k.EEDO_ID).FirstOrDefault().ToString();

                    /*بدست اوردن ردیف سال زمانبندی در صورتیکه وجود داشته باشد */
                    iddoc = int.Parse(a);
                }

                /*برنامه های تعریف شده را بدست می اوریم */
                var query = from b in Db.EXP_PROG_TIME select new { b.EPTI_ID, b.EFUN_EFUN_ID, b.EINS_EINS_ID, b.EOFS_EOFS_ID, b.ETBY_ETBY_ID, b.EUNL_EUNL_ID };

                foreach (var program in query)
                {
                    /*بدست اوردن عملیات های هر برنامه */
                    var q = (from p in Db.EXP_PFUNCTION
                             where p.EFUN_ID == program.EFUN_EFUN_ID
                             select new { p.ETIP_ETIP_ID }).FirstOrDefault();

                    int o = 1;
                    if (q.ETIP_ETIP_ID.ToString() != "")
                    {
                        o = int.Parse(q.ETIP_ETIP_ID.ToString());
                    }
                    if (o <= 12)
                    {
                        o = 12 / o;
                    }
                    else
                    {
                        int cq = 0;
                        if (program.EINS_EINS_ID != null)
                        {
                            var query2 = (from b in Db.EXP_POST_LINE_INSTRU
                                          join c in Db.EXP_EDOC_INSTRU on b.EPIU_ID equals c.EPIU_EPIU_ID
                                          join v in Db.EXP_EXPI_DOC on c.EEDO_EEDO_ID equals v.EEDO_ID
                                          orderby v.EEDO_YEAR
                                          where (b.EINS_EINS_ID == program.EINS_EINS_ID)
                                                 && (b.EUNL_EUNL_ID == program.EUNL_EUNL_ID || c.EUNL_EUNL_ID == null)
                                                 && c.EPTI_EPTI_ID == program.EPTI_ID
                                                 && c.EOFS_EOFS_ID == program.EOFS_EOFS_ID && (c.EFUN_EFUN_ID == program.EFUN_EFUN_ID)
                                                 && c.EEDO_EEDO_ID != iddoc
                                          select v.EEDO_YEAR);
                            if (query2.FirstOrDefault() != null)
                            {
                                cq = Convert.ToInt32(query2.Distinct().ToList().Max().ToString());
                                int u = o / 12;
                                cq = cq + u;
                                int d1 = Convert.ToInt32(d);

                                if (cq == d1)
                                    o = 1;
                                else
                                    o = 0;
                            }
                            else
                            {
                                o = 1;
                            }
                        }
                        else
                        {
                            var query2 = (from c in Db.EXP_EDOC_INSTRU
                                          join v in Db.EXP_EXPI_DOC on c.EEDO_EEDO_ID equals v.EEDO_ID
                                          orderby v.EEDO_YEAR
                                          where (c.ETBY_ETBY_ID == program.ETBY_ETBY_ID)
                                                 && c.EPTI_EPTI_ID == program.EPTI_ID
                                                 && c.EOFS_EOFS_ID == program.EOFS_EOFS_ID && c.EFUN_EFUN_ID == program.EFUN_EFUN_ID
                                                 && c.EEDO_EEDO_ID != iddoc
                                          select v.EEDO_YEAR);

                            if (query2.FirstOrDefault() != null)
                            {
                                cq = Convert.ToInt32(query2.Distinct().ToList().Max().ToString());
                                int u = o / 12;
                                cq = cq + u;
                                int d1 = Convert.ToInt32(d);
                                if (cq == d1)
                                    o = 1;
                                else
                                    o = 0;
                            }
                            else
                            {
                                o = 1;
                            }
                        }
                    }

                    /*بدست اوردن تعداد بار ایجاد برنامه زمانبندی برای تجهیز */
                    if (program.EINS_EINS_ID != null)
                    {
                        /*ایجاد برنامه زمانبندی برای تجهیزات */
                        if (program.EINS_EINS_ID != 1)
                        {
                            /*بدست اوردن این نوع تجهیز در پست ها */
                            var query2 = from b in Db.EXP_POST_LINE_INSTRU
                                         join p in Db.EXP_POST_LINE on b.EPOL_EPOL_ID equals p.EPOL_ID
                                         where (b.EINS_EINS_ID == program.EINS_EINS_ID) && p.EPOL_TYPE == "0" && b.EPIU_EPIU_ID_SAVABEGH == null
                                                && (b.EUNL_EUNL_ID == program.EUNL_EUNL_ID || b.EUNL_EUNL_ID == null)
                                         select new { b.EPIU_ID, b.EUNL_EUNL_ID, p.EPOL_ID };

                            foreach (var instru in query2)
                            {
                                int count;
                                /*تعداد بار ثبت برنامه زمانبندی */
                                int c = (from b in Db.EXP_EDOC_INSTRU
                                         where b.EPTI_EPTI_ID == program.EPTI_ID &&
                                               b.EPIU_EPIU_ID == instru.EPIU_ID &&
                                               b.EPOL_EPOL_ID == instru.EPOL_ID &&
                                               b.EOFS_EOFS_ID == program.EOFS_EOFS_ID &&
                                               b.EFUN_EFUN_ID == program.EFUN_EFUN_ID &&
                                               (b.EUNL_EUNL_ID == instru.EUNL_EUNL_ID || b.EUNL_EUNL_ID == null) &&
                                               b.EEDO_EEDO_ID == iddoc
                                         select b.EDIN_ID).Count();

                                for (count = c; count < o; count++)
                                {
                                    /*ثبت تجهیز براساس برنامه تعریف شده */
                                    Db.EXP_EDOC_INSTRU.Add(new EXP_EDOC_INSTRU()
                                    {
                                        EPTI_EPTI_ID = program.EPTI_ID,
                                        EPIU_EPIU_ID = instru.EPIU_ID,
                                        EPOL_EPOL_ID = instru.EPOL_ID,
                                        EOFS_EOFS_ID = program.EOFS_EOFS_ID,
                                        EFUN_EFUN_ID = program.EFUN_EFUN_ID,
                                        EUNL_EUNL_ID = instru.EUNL_EUNL_ID,
                                        ETDO_ETDO_ID = 101,
                                        EEDO_EEDO_ID = iddoc
                                    });

                                    Db.SaveChanges();
                                }
                            }
                        }
                        else
                        {
                            /*بدست اوردن خط های شبکه برساس تعریف برنامه */
                            var query2 = from b in Db.EXP_POST_LINE_INSTRU
                                         join l in Db.EXP_POST_LINE on b.EPOL_EPOL_ID equals l.EPOL_ID
                                         where (l.EUNL_EUNL_ID == program.EUNL_EUNL_ID) && l.EPOL_TYPE == "1" && b.EPOL_EPOL_ID_INSLIN != null && b.EPOL_EPOL_ID_LINE != null
                                         select new { b.EPIU_ID, l.EUNL_EUNL_ID, b.EPOL_EPOL_ID_INSLIN, b.EPOL_EPOL_ID_LINE };

                            foreach (var line in query2)
                            {
                                int count;
                                /*تعداد بار تعریف برنامه های خط */
                                int c = (from b in Db.EXP_EDOC_INSTRU
                                         where b.EPTI_EPTI_ID == program.EPTI_ID &&
                                               b.EPIU_EPIU_ID == line.EPIU_ID &&
                                               b.EPOL_EPOL_ID == line.EPOL_EPOL_ID_INSLIN &&
                                               b.EOFS_EOFS_ID == program.EOFS_EOFS_ID &&
                                               b.EFUN_EFUN_ID == program.EFUN_EFUN_ID &&
                                               b.EUNL_EUNL_ID == line.EUNL_EUNL_ID &&
                                               b.EEDO_EEDO_ID == iddoc
                                         select b.EDIN_ID).Count();

                                for (count = c; count < o; count++)
                                {
                                    Db.EXP_EDOC_INSTRU.Add(new EXP_EDOC_INSTRU()
                                    /*ایجاد برنامه زمانبندی براساس تعداد بار تعریف برنامه */
                                    {
                                        ETDO_ETDO_ID = 101,
                                        EPTI_EPTI_ID = program.EPTI_ID,
                                        EPIU_EPIU_ID = line.EPIU_ID,
                                        EPOL_EPOL_ID = line.EPOL_EPOL_ID_INSLIN,
                                        EOFS_EOFS_ID = program.EOFS_EOFS_ID,
                                        EFUN_EFUN_ID = program.EFUN_EFUN_ID,
                                        EUNL_EUNL_ID = line.EUNL_EUNL_ID,
                                        EEDO_EEDO_ID = iddoc
                                    });

                                    Db.SaveChanges();
                                }
                            }
                        }
                    }
                    else
                    {
                        if (program.ETBY_ETBY_ID != null)
                        {
                            /*بدست اوردن بی های که تعریف برنامه شده اند */
                            var query2 = from b in Db.EXP_CORE_BAY
                                         join l in Db.EXP_POST_LINE_INSTRU
                                         on b.EPIU_EPIU_ID equals l.EPIU_ID
                                         where (b.EUNL_EUNL_ID == program.EUNL_EUNL_ID) && (b.ETBY_ETBY_ID == program.ETBY_ETBY_ID) && l.EPIU_EPIU_ID_SAVABEGH == null
                                         select new { l.LINE_TYPE, l.EPIU_ID, b.ETBY_ETBY_ID, b.EUNL_EUNL_ID, l.EPOL_EPOL_ID, l.EPOL_EPOL_ID_INSLIN, l.EPOL_EPOL_ID_LINE };

                            foreach (var bay in query2)
                            {
                                /*بی تعریف شه بی خط نباشد */
                                if (bay.LINE_TYPE == null)
                                {
                                    int count;
                                    int c = (from b in Db.EXP_EDOC_INSTRU
                                             where b.EPTI_EPTI_ID == program.EPTI_ID &&
                                                   b.ETBY_ETBY_ID == bay.ETBY_ETBY_ID &&
                                                   b.EPIU_EPIU_ID == bay.EPIU_ID &&
                                                   b.EPOL_EPOL_ID == bay.EPOL_EPOL_ID &&
                                                   b.EOFS_EOFS_ID == program.EOFS_EOFS_ID &&
                                                   b.EFUN_EFUN_ID == program.EFUN_EFUN_ID &&
                                                   b.EUNL_EUNL_ID == bay.EUNL_EUNL_ID &&
                                                   b.EEDO_EEDO_ID == iddoc
                                             select b.EDIN_ID).Count();

                                    /*بدست اوردن تعداد بار تعریف این تجهیز */
                                    for (count = c; count < o; count++)
                                    {
                                        /*ثبت بی خط براساس تعداد بار تعریف شده */
                                        Db.EXP_EDOC_INSTRU.Add(new EXP_EDOC_INSTRU()
                                        {
                                            ETDO_ETDO_ID = 101,
                                            EPTI_EPTI_ID = program.EPTI_ID,
                                            ETBY_ETBY_ID = bay.ETBY_ETBY_ID,
                                            EPIU_EPIU_ID = bay.EPIU_ID,
                                            EPOL_EPOL_ID = bay.EPOL_EPOL_ID,
                                            EOFS_EOFS_ID = program.EOFS_EOFS_ID,
                                            EFUN_EFUN_ID = program.EFUN_EFUN_ID,
                                            EUNL_EUNL_ID = bay.EUNL_EUNL_ID,
                                            EEDO_EEDO_ID = iddoc
                                        });

                                        Db.SaveChanges();
                                    }
                                }

                                if (bay.LINE_TYPE == "0")
                                {
                                    /*  یک سر خط برای بی های خط */
                                    int count;
                                    int c = (from b in Db.EXP_EDOC_INSTRU
                                             where b.EPTI_EPTI_ID == program.EPTI_ID &&
                                                   b.ETBY_ETBY_ID == bay.ETBY_ETBY_ID &&
                                                   b.EPIU_EPIU_ID == bay.EPIU_ID &&
                                                   b.EPOL_EPOL_ID == bay.EPOL_EPOL_ID_INSLIN &&
                                                   b.EOFS_EOFS_ID == program.EOFS_EOFS_ID &&
                                                   b.EFUN_EFUN_ID == program.EFUN_EFUN_ID &&
                                                   b.EUNL_EUNL_ID == bay.EUNL_EUNL_ID &&
                                                   b.EEDO_EEDO_ID == iddoc
                                             select b.EDIN_ID).Count();

                                    for (count = c; count < o; count++)
                                    {
                                        /*ثبت بی های خط براساس تعداد بار تعریف برنامه */
                                        Db.EXP_EDOC_INSTRU.Add(new EXP_EDOC_INSTRU()
                                        {
                                            ETDO_ETDO_ID = 101,
                                            EPTI_EPTI_ID = program.EPTI_ID,
                                            ETBY_ETBY_ID = bay.ETBY_ETBY_ID,
                                            EPIU_EPIU_ID = bay.EPIU_ID,
                                            EPOL_EPOL_ID = bay.EPOL_EPOL_ID_INSLIN,
                                            EOFS_EOFS_ID = program.EOFS_EOFS_ID,
                                            EFUN_EFUN_ID = program.EFUN_EFUN_ID,
                                            EUNL_EUNL_ID = bay.EUNL_EUNL_ID,
                                            EEDO_EEDO_ID = iddoc
                                        });

                                        Db.SaveChanges();
                                    }

                                    c = (from b in Db.EXP_EDOC_INSTRU
                                         where b.EPTI_EPTI_ID == program.EPTI_ID &&
                                               b.ETBY_ETBY_ID == bay.ETBY_ETBY_ID &&
                                               b.EPIU_EPIU_ID == bay.EPIU_ID &&
                                               b.EPOL_EPOL_ID == bay.EPOL_EPOL_ID_LINE &&
                                               b.EOFS_EOFS_ID == program.EOFS_EOFS_ID &&
                                               b.EFUN_EFUN_ID == program.EFUN_EFUN_ID &&
                                               b.EUNL_EUNL_ID == bay.EUNL_EUNL_ID &&
                                               b.EEDO_EEDO_ID == iddoc
                                         select b.EDIN_ID).Count();

                                    /*ایجاد بی خط سر دیگر خط */
                                    for (count = c; count < o; count++)
                                    {
                                        Db.EXP_EDOC_INSTRU.Add(new EXP_EDOC_INSTRU()
                                        {
                                            ETDO_ETDO_ID = 101,
                                            EPTI_EPTI_ID = program.EPTI_ID,
                                            ETBY_ETBY_ID = bay.ETBY_ETBY_ID,
                                            EPIU_EPIU_ID = bay.EPIU_ID,
                                            EPOL_EPOL_ID = bay.EPOL_EPOL_ID_LINE,
                                            EOFS_EOFS_ID = program.EOFS_EOFS_ID,
                                            EFUN_EFUN_ID = program.EFUN_EFUN_ID,
                                            EUNL_EUNL_ID = bay.EUNL_EUNL_ID,
                                            EEDO_EEDO_ID = iddoc
                                        });

                                        Db.SaveChanges();
                                    }
                                }

                                if (bay.LINE_TYPE == "1" || bay.LINE_TYPE == "2")
                                {
                                    /*برای حالت بی های خط تیاف و فیدر که فقط یک سر انها پست است */
                                    int count;
                                    int c = (from b in Db.EXP_EDOC_INSTRU
                                             where b.EPTI_EPTI_ID == program.EPTI_ID &&
                                                   b.ETBY_ETBY_ID == bay.ETBY_ETBY_ID &&
                                                   b.EPIU_EPIU_ID == bay.EPIU_ID &&
                                                   b.EPOL_EPOL_ID == bay.EPOL_EPOL_ID_INSLIN &&
                                                   b.EOFS_EOFS_ID == program.EOFS_EOFS_ID &&
                                                   b.EFUN_EFUN_ID == program.EFUN_EFUN_ID &&
                                                   b.EUNL_EUNL_ID == bay.EUNL_EUNL_ID && b.EEDO_EEDO_ID == iddoc
                                             select b.EDIN_ID).Count();

                                    for (count = c; count < o; count++)
                                    {
                                        /*تعریف سر خط که پست است براساس تعداد باری که تعریف برنامه برای آن شده است */
                                        Db.EXP_EDOC_INSTRU.Add(new EXP_EDOC_INSTRU()
                                        {
                                            ETDO_ETDO_ID = 101,
                                            EPTI_EPTI_ID = program.EPTI_ID,
                                            ETBY_ETBY_ID = bay.ETBY_ETBY_ID,
                                            EPIU_EPIU_ID = bay.EPIU_ID,
                                            EPOL_EPOL_ID = bay.EPOL_EPOL_ID_INSLIN,
                                            EOFS_EOFS_ID = program.EOFS_EOFS_ID,
                                            EFUN_EFUN_ID = program.EFUN_EFUN_ID,
                                            EUNL_EUNL_ID = bay.EUNL_EUNL_ID,
                                            EEDO_EEDO_ID = iddoc
                                        });

                                        Db.SaveChanges();
                                    }
                                }
                            }
                        }
                    }
                }

                return new ServerMessages(ServerOprationType.Success) { Message = string.Format("[{0}] ثبت شد.", d) }.ToJson();
            }
            catch (Exception ex)
            {
                this.LogError(ex);
                //Asr.Security.AsrExceptionManager exMgr = new Asr.Security.AsrExceptionManager(ex, "127.0.0.1", "none", GlobalConst.UserInfo().UserId, "none", "none");
                //exMgr.LogError();
                //exMgr.Dispose();                
                return new ServerMessages(ServerOprationType.Failure) { ExceptionMessage = ex.PersianMessage() }.ToJson();
            }
        }

        public ActionResult Exp_TimeProg_Delete(EXP_EDOC_INSTRU model)
        {
            var myobj = Db.EXP_EDOC_INSTRU.FirstOrDefault(b => b.EDIN_ID == model.EDIN_ID);
            Db.EXP_EDOC_INSTRU.Remove(myobj);
            Db.SaveChanges();
            return View("MainProgramTime");
        }

        [EntityAuthorize("EXP_INSTRUMENT > select")]
        public ActionResult EINS_EINS_ID_classtime()
        {
            //int?[] array = new int?[] { 1, 2, 3, 4, 281, 56, 57, 232, 169, 282 };
            var query = (from b in Db.EXP_INSTRUMENT
                         orderby b.EINS_DESC
                         //where b.EINS_ID == 1 || b.EINS_ID == 2 || b.EINS_ID == 3 || b.EINS_ID == 4 || b.EINS_ID == 281
                         //where array.Contains(b.EINS_ID)
                         where b.SERV_STAT == "0"
                         orderby b.EINS_DESC
                         select new { b.EINS_ID, b.EINS_DESC });
            return Json(query, JsonRequestBehavior.AllowGet);
        }

        //[EntityAuthorize("EXP_POST_LINE_INSTRU > select|EXP_CORE_BAY > select")]
        //public ActionResult ReadInstruBay(short? postid, int? bay)
        //{
        //    var RetVal = (from b in Context.EXP_POST_LINE_INSTRU
        //                  join p in Context.EXP_CORE_BAY on b.EPIU_ID equals p.EPIU_EPIU_ID
        //                  where (b.EPOL_EPOL_ID == postid || b.EPOL_EPOL_ID_INSLIN == postid || b.EPOL_EPOL_ID_LINE == postid) && p.ETBY_ETBY_ID == bay
        //                  select new
        //                  {
        //                      b.EPIU_ID,
        //                      b.CODE_NAME,
        //                      b.PHAS_TYPE,
        //                      b.PHAS_STAT
        //                  }).Distinct();
        //    return Json(RetVal, JsonRequestBehavior.AllowGet);
        //}

        [EntityAuthorize("EXP_POST_LINE_INSTRU > select|EXP_CORE_BAY > select|EXP_POST_LINE > select")]
        public ActionResult ReadInstruOrBay(short? postid, int? Unitvolt1, int? inst, int? typeinst, int? bay, int? trans)
        {
            if (typeinst == 1)
            {
                var RetVal = (from b in Db.EXP_POST_LINE_INSTRU
                              join p in Db.EXP_CORE_BAY on b.EPIU_ID equals p.EPIU_EPIU_ID
                              where (b.EPOL_EPOL_ID == postid || b.EPOL_EPOL_ID_INSLIN == postid || b.EPOL_EPOL_ID_LINE == postid) && p.ETBY_ETBY_ID == bay
                                     && (b.EPIU_EPIU_ID_RT == trans || trans == null)
                              select new
                              {
                                  b.EPIU_ID,
                                  b.CODE_NAME,
                                  b.PHAS_TYPE,
                                  b.PHAS_STAT
                              }).OrderBy(b => b.CODE_NAME).Distinct();

                return Json(RetVal, JsonRequestBehavior.AllowGet);
            }
            else
            {
                if (inst == 1)
                {
                    var RetVal = (from b in Db.EXP_POST_LINE_INSTRU
                                  join p in Db.EXP_POST_LINE on b.EPOL_EPOL_ID equals p.EPOL_ID
                                  where (p.EPOL_TYPE == "1" && b.EINS_EINS_ID == inst && (b.EPOL_EPOL_ID_INSLIN == postid || b.EPOL_EPOL_ID_LINE == postid))
                                      /*&& p.EUNL_EUNL_ID == Unitvolt1*/ && (b.EPIU_EPIU_ID_RT == trans || trans == null)
                                  select new
                                  {
                                      b.EPIU_ID,
                                      b.CODE_NAME,
                                      b.PHAS_TYPE,
                                      b.PHAS_STAT
                                  }).OrderBy(b => b.CODE_NAME);

                    return Json(RetVal, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    var RetVal = (from b in Db.EXP_POST_LINE_INSTRU
                                  join p in Db.EXP_POST_LINE on b.EPOL_EPOL_ID equals p.EPOL_ID
                                  where (b.EPOL_EPOL_ID == postid) && b.EINS_EINS_ID == inst
                                  select new
                                  {
                                      b.EPIU_ID,
                                      b.CODE_NAME,
                                      b.PHAS_TYPE,
                                      b.PHAS_STAT
                                  }).OrderBy(b => b.CODE_NAME);

                    return Json(RetVal, JsonRequestBehavior.AllowGet);
                }
            }
        }

        public ActionResult ReadTrans(int? postID)
        {
            var query = (from b in Db.EXP_POST_LINE_INSTRU
                         where b.EPOL_EPOL_ID == postID && b.EINS_EINS_ID == 2
                         select new { b.EPIU_ID, b.CODE_NAME }).OrderBy(x => x.CODE_NAME).Distinct();
            return Json(query, JsonRequestBehavior.AllowGet);
        }

        public ActionResult Showviewdate()
        {
            return View("~/Views/ProgTimeBay/Index");
        }

    }

}
